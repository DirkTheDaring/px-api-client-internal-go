/*
ProxMox VE API

ProxMox VE API

API version: 8.0
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the GetVMConfig200ResponseDataUnused0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVMConfig200ResponseDataUnused0{}

// GetVMConfig200ResponseDataUnused0 struct for GetVMConfig200ResponseDataUnused0
type GetVMConfig200ResponseDataUnused0 struct {
	// The drive's backing volume.
	File *string `json:"file,omitempty"`
	Volume *string `json:"volume,omitempty"`
}

// NewGetVMConfig200ResponseDataUnused0 instantiates a new GetVMConfig200ResponseDataUnused0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVMConfig200ResponseDataUnused0() *GetVMConfig200ResponseDataUnused0 {
	this := GetVMConfig200ResponseDataUnused0{}
	return &this
}

// NewGetVMConfig200ResponseDataUnused0WithDefaults instantiates a new GetVMConfig200ResponseDataUnused0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVMConfig200ResponseDataUnused0WithDefaults() *GetVMConfig200ResponseDataUnused0 {
	this := GetVMConfig200ResponseDataUnused0{}
	return &this
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *GetVMConfig200ResponseDataUnused0) GetFile() string {
	if o == nil || IsNil(o.File) {
		var ret string
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMConfig200ResponseDataUnused0) GetFileOk() (*string, bool) {
	if o == nil || IsNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *GetVMConfig200ResponseDataUnused0) HasFile() bool {
	if o != nil && !IsNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given string and assigns it to the File field.
func (o *GetVMConfig200ResponseDataUnused0) SetFile(v string) {
	o.File = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *GetVMConfig200ResponseDataUnused0) GetVolume() string {
	if o == nil || IsNil(o.Volume) {
		var ret string
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMConfig200ResponseDataUnused0) GetVolumeOk() (*string, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *GetVMConfig200ResponseDataUnused0) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given string and assigns it to the Volume field.
func (o *GetVMConfig200ResponseDataUnused0) SetVolume(v string) {
	o.Volume = &v
}

func (o GetVMConfig200ResponseDataUnused0) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVMConfig200ResponseDataUnused0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.File) {
		toSerialize["file"] = o.File
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return toSerialize, nil
}

type NullableGetVMConfig200ResponseDataUnused0 struct {
	value *GetVMConfig200ResponseDataUnused0
	isSet bool
}

func (v NullableGetVMConfig200ResponseDataUnused0) Get() *GetVMConfig200ResponseDataUnused0 {
	return v.value
}

func (v *NullableGetVMConfig200ResponseDataUnused0) Set(val *GetVMConfig200ResponseDataUnused0) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVMConfig200ResponseDataUnused0) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVMConfig200ResponseDataUnused0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVMConfig200ResponseDataUnused0(val *GetVMConfig200ResponseDataUnused0) *NullableGetVMConfig200ResponseDataUnused0 {
	return &NullableGetVMConfig200ResponseDataUnused0{value: val, isSet: true}
}

func (v NullableGetVMConfig200ResponseDataUnused0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVMConfig200ResponseDataUnused0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


