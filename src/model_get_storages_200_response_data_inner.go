/*
ProxMox VE API

ProxMox VE API

API version: 8.0
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the GetStorages200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetStorages200ResponseDataInner{}

// GetStorages200ResponseDataInner struct for GetStorages200ResponseDataInner
type GetStorages200ResponseDataInner struct {
	// Set when storage is accessible.
	Active *int32 `json:"active,omitempty"`
	// Available storage space in bytes.
	Avail *int64 `json:"avail,omitempty"`
	// Allowed storage content types.
	Content *string `json:"content,omitempty"`
	// Set when storage is enabled (not disabled).
	Enabled *int32 `json:"enabled,omitempty"`
	// Shared flag from storage configuration.
	Shared *int32 `json:"shared,omitempty"`
	// The storage identifier.
	Storage *string `json:"storage,omitempty"`
	// Total storage space in bytes.
	Total *int64 `json:"total,omitempty"`
	// Storage type.
	Type *string `json:"type,omitempty"`
	// Used storage space in bytes.
	Used *int64 `json:"used,omitempty"`
	// Used fraction (used/total).
	UsedFraction *float32 `json:"used_fraction,omitempty"`
}

// NewGetStorages200ResponseDataInner instantiates a new GetStorages200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStorages200ResponseDataInner() *GetStorages200ResponseDataInner {
	this := GetStorages200ResponseDataInner{}
	return &this
}

// NewGetStorages200ResponseDataInnerWithDefaults instantiates a new GetStorages200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStorages200ResponseDataInnerWithDefaults() *GetStorages200ResponseDataInner {
	this := GetStorages200ResponseDataInner{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *GetStorages200ResponseDataInner) GetActive() int32 {
	if o == nil || IsNil(o.Active) {
		var ret int32
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStorages200ResponseDataInner) GetActiveOk() (*int32, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *GetStorages200ResponseDataInner) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given int32 and assigns it to the Active field.
func (o *GetStorages200ResponseDataInner) SetActive(v int32) {
	o.Active = &v
}

// GetAvail returns the Avail field value if set, zero value otherwise.
func (o *GetStorages200ResponseDataInner) GetAvail() int64 {
	if o == nil || IsNil(o.Avail) {
		var ret int64
		return ret
	}
	return *o.Avail
}

// GetAvailOk returns a tuple with the Avail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStorages200ResponseDataInner) GetAvailOk() (*int64, bool) {
	if o == nil || IsNil(o.Avail) {
		return nil, false
	}
	return o.Avail, true
}

// HasAvail returns a boolean if a field has been set.
func (o *GetStorages200ResponseDataInner) HasAvail() bool {
	if o != nil && !IsNil(o.Avail) {
		return true
	}

	return false
}

// SetAvail gets a reference to the given int64 and assigns it to the Avail field.
func (o *GetStorages200ResponseDataInner) SetAvail(v int64) {
	o.Avail = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *GetStorages200ResponseDataInner) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStorages200ResponseDataInner) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *GetStorages200ResponseDataInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *GetStorages200ResponseDataInner) SetContent(v string) {
	o.Content = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetStorages200ResponseDataInner) GetEnabled() int32 {
	if o == nil || IsNil(o.Enabled) {
		var ret int32
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStorages200ResponseDataInner) GetEnabledOk() (*int32, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetStorages200ResponseDataInner) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given int32 and assigns it to the Enabled field.
func (o *GetStorages200ResponseDataInner) SetEnabled(v int32) {
	o.Enabled = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *GetStorages200ResponseDataInner) GetShared() int32 {
	if o == nil || IsNil(o.Shared) {
		var ret int32
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStorages200ResponseDataInner) GetSharedOk() (*int32, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *GetStorages200ResponseDataInner) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given int32 and assigns it to the Shared field.
func (o *GetStorages200ResponseDataInner) SetShared(v int32) {
	o.Shared = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *GetStorages200ResponseDataInner) GetStorage() string {
	if o == nil || IsNil(o.Storage) {
		var ret string
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStorages200ResponseDataInner) GetStorageOk() (*string, bool) {
	if o == nil || IsNil(o.Storage) {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *GetStorages200ResponseDataInner) HasStorage() bool {
	if o != nil && !IsNil(o.Storage) {
		return true
	}

	return false
}

// SetStorage gets a reference to the given string and assigns it to the Storage field.
func (o *GetStorages200ResponseDataInner) SetStorage(v string) {
	o.Storage = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetStorages200ResponseDataInner) GetTotal() int64 {
	if o == nil || IsNil(o.Total) {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStorages200ResponseDataInner) GetTotalOk() (*int64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetStorages200ResponseDataInner) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *GetStorages200ResponseDataInner) SetTotal(v int64) {
	o.Total = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetStorages200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStorages200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetStorages200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetStorages200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetUsed returns the Used field value if set, zero value otherwise.
func (o *GetStorages200ResponseDataInner) GetUsed() int64 {
	if o == nil || IsNil(o.Used) {
		var ret int64
		return ret
	}
	return *o.Used
}

// GetUsedOk returns a tuple with the Used field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStorages200ResponseDataInner) GetUsedOk() (*int64, bool) {
	if o == nil || IsNil(o.Used) {
		return nil, false
	}
	return o.Used, true
}

// HasUsed returns a boolean if a field has been set.
func (o *GetStorages200ResponseDataInner) HasUsed() bool {
	if o != nil && !IsNil(o.Used) {
		return true
	}

	return false
}

// SetUsed gets a reference to the given int64 and assigns it to the Used field.
func (o *GetStorages200ResponseDataInner) SetUsed(v int64) {
	o.Used = &v
}

// GetUsedFraction returns the UsedFraction field value if set, zero value otherwise.
func (o *GetStorages200ResponseDataInner) GetUsedFraction() float32 {
	if o == nil || IsNil(o.UsedFraction) {
		var ret float32
		return ret
	}
	return *o.UsedFraction
}

// GetUsedFractionOk returns a tuple with the UsedFraction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStorages200ResponseDataInner) GetUsedFractionOk() (*float32, bool) {
	if o == nil || IsNil(o.UsedFraction) {
		return nil, false
	}
	return o.UsedFraction, true
}

// HasUsedFraction returns a boolean if a field has been set.
func (o *GetStorages200ResponseDataInner) HasUsedFraction() bool {
	if o != nil && !IsNil(o.UsedFraction) {
		return true
	}

	return false
}

// SetUsedFraction gets a reference to the given float32 and assigns it to the UsedFraction field.
func (o *GetStorages200ResponseDataInner) SetUsedFraction(v float32) {
	o.UsedFraction = &v
}

func (o GetStorages200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetStorages200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Avail) {
		toSerialize["avail"] = o.Avail
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.Storage) {
		toSerialize["storage"] = o.Storage
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Used) {
		toSerialize["used"] = o.Used
	}
	if !IsNil(o.UsedFraction) {
		toSerialize["used_fraction"] = o.UsedFraction
	}
	return toSerialize, nil
}

type NullableGetStorages200ResponseDataInner struct {
	value *GetStorages200ResponseDataInner
	isSet bool
}

func (v NullableGetStorages200ResponseDataInner) Get() *GetStorages200ResponseDataInner {
	return v.value
}

func (v *NullableGetStorages200ResponseDataInner) Set(val *GetStorages200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStorages200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStorages200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStorages200ResponseDataInner(val *GetStorages200ResponseDataInner) *NullableGetStorages200ResponseDataInner {
	return &NullableGetStorages200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetStorages200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStorages200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


