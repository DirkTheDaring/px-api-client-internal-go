/*
ProxMox VE API

ProxMox VE API

API version: 8.0
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the GetVMConfigPending200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVMConfigPending200Response{}

// GetVMConfigPending200Response struct for GetVMConfigPending200Response
type GetVMConfigPending200Response struct {
	Data []GetVMConfigPending200ResponseDataInner `json:"data,omitempty"`
	Errors []string `json:"errors,omitempty"`
}

// NewGetVMConfigPending200Response instantiates a new GetVMConfigPending200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVMConfigPending200Response() *GetVMConfigPending200Response {
	this := GetVMConfigPending200Response{}
	return &this
}

// NewGetVMConfigPending200ResponseWithDefaults instantiates a new GetVMConfigPending200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVMConfigPending200ResponseWithDefaults() *GetVMConfigPending200Response {
	this := GetVMConfigPending200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetVMConfigPending200Response) GetData() []GetVMConfigPending200ResponseDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []GetVMConfigPending200ResponseDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMConfigPending200Response) GetDataOk() ([]GetVMConfigPending200ResponseDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetVMConfigPending200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []GetVMConfigPending200ResponseDataInner and assigns it to the Data field.
func (o *GetVMConfigPending200Response) SetData(v []GetVMConfigPending200ResponseDataInner) {
	o.Data = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *GetVMConfigPending200Response) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMConfigPending200Response) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *GetVMConfigPending200Response) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *GetVMConfigPending200Response) SetErrors(v []string) {
	o.Errors = v
}

func (o GetVMConfigPending200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVMConfigPending200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

type NullableGetVMConfigPending200Response struct {
	value *GetVMConfigPending200Response
	isSet bool
}

func (v NullableGetVMConfigPending200Response) Get() *GetVMConfigPending200Response {
	return v.value
}

func (v *NullableGetVMConfigPending200Response) Set(val *GetVMConfigPending200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVMConfigPending200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVMConfigPending200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVMConfigPending200Response(val *GetVMConfigPending200Response) *NullableGetVMConfigPending200Response {
	return &NullableGetVMConfigPending200Response{value: val, isSet: true}
}

func (v NullableGetVMConfigPending200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVMConfigPending200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


