/*
ProxMox VE API

ProxMox VE API

API version: 8.0
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the GetVM200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVM200ResponseDataInner{}

// GetVM200ResponseDataInner struct for GetVM200ResponseDataInner
type GetVM200ResponseDataInner struct {
	Subdir *string `json:"subdir,omitempty"`
}

// NewGetVM200ResponseDataInner instantiates a new GetVM200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVM200ResponseDataInner() *GetVM200ResponseDataInner {
	this := GetVM200ResponseDataInner{}
	return &this
}

// NewGetVM200ResponseDataInnerWithDefaults instantiates a new GetVM200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVM200ResponseDataInnerWithDefaults() *GetVM200ResponseDataInner {
	this := GetVM200ResponseDataInner{}
	return &this
}

// GetSubdir returns the Subdir field value if set, zero value otherwise.
func (o *GetVM200ResponseDataInner) GetSubdir() string {
	if o == nil || IsNil(o.Subdir) {
		var ret string
		return ret
	}
	return *o.Subdir
}

// GetSubdirOk returns a tuple with the Subdir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVM200ResponseDataInner) GetSubdirOk() (*string, bool) {
	if o == nil || IsNil(o.Subdir) {
		return nil, false
	}
	return o.Subdir, true
}

// HasSubdir returns a boolean if a field has been set.
func (o *GetVM200ResponseDataInner) HasSubdir() bool {
	if o != nil && !IsNil(o.Subdir) {
		return true
	}

	return false
}

// SetSubdir gets a reference to the given string and assigns it to the Subdir field.
func (o *GetVM200ResponseDataInner) SetSubdir(v string) {
	o.Subdir = &v
}

func (o GetVM200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVM200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subdir) {
		toSerialize["subdir"] = o.Subdir
	}
	return toSerialize, nil
}

type NullableGetVM200ResponseDataInner struct {
	value *GetVM200ResponseDataInner
	isSet bool
}

func (v NullableGetVM200ResponseDataInner) Get() *GetVM200ResponseDataInner {
	return v.value
}

func (v *NullableGetVM200ResponseDataInner) Set(val *GetVM200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVM200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVM200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVM200ResponseDataInner(val *GetVM200ResponseDataInner) *NullableGetVM200ResponseDataInner {
	return &NullableGetVM200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetVM200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVM200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


