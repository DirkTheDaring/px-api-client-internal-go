/*
ProxMox VE API

ProxMox VE API

API version: 8.3
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the CreateContainerRequestFeatures type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateContainerRequestFeatures{}

// CreateContainerRequestFeatures struct for CreateContainerRequestFeatures
type CreateContainerRequestFeatures struct {
	ForceRwSys *bool `json:"force_rw_sys,omitempty"`
	Fuse *bool `json:"fuse,omitempty"`
	Keyctl *bool `json:"keyctl,omitempty"`
	Mknod *bool `json:"mknod,omitempty"`
	Mount *string `json:"mount,omitempty"`
	Nesting *bool `json:"nesting,omitempty"`
}

// NewCreateContainerRequestFeatures instantiates a new CreateContainerRequestFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateContainerRequestFeatures() *CreateContainerRequestFeatures {
	this := CreateContainerRequestFeatures{}
	return &this
}

// NewCreateContainerRequestFeaturesWithDefaults instantiates a new CreateContainerRequestFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateContainerRequestFeaturesWithDefaults() *CreateContainerRequestFeatures {
	this := CreateContainerRequestFeatures{}
	return &this
}

// GetForceRwSys returns the ForceRwSys field value if set, zero value otherwise.
func (o *CreateContainerRequestFeatures) GetForceRwSys() bool {
	if o == nil || IsNil(o.ForceRwSys) {
		var ret bool
		return ret
	}
	return *o.ForceRwSys
}

// GetForceRwSysOk returns a tuple with the ForceRwSys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestFeatures) GetForceRwSysOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceRwSys) {
		return nil, false
	}
	return o.ForceRwSys, true
}

// HasForceRwSys returns a boolean if a field has been set.
func (o *CreateContainerRequestFeatures) HasForceRwSys() bool {
	if o != nil && !IsNil(o.ForceRwSys) {
		return true
	}

	return false
}

// SetForceRwSys gets a reference to the given bool and assigns it to the ForceRwSys field.
func (o *CreateContainerRequestFeatures) SetForceRwSys(v bool) {
	o.ForceRwSys = &v
}

// GetFuse returns the Fuse field value if set, zero value otherwise.
func (o *CreateContainerRequestFeatures) GetFuse() bool {
	if o == nil || IsNil(o.Fuse) {
		var ret bool
		return ret
	}
	return *o.Fuse
}

// GetFuseOk returns a tuple with the Fuse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestFeatures) GetFuseOk() (*bool, bool) {
	if o == nil || IsNil(o.Fuse) {
		return nil, false
	}
	return o.Fuse, true
}

// HasFuse returns a boolean if a field has been set.
func (o *CreateContainerRequestFeatures) HasFuse() bool {
	if o != nil && !IsNil(o.Fuse) {
		return true
	}

	return false
}

// SetFuse gets a reference to the given bool and assigns it to the Fuse field.
func (o *CreateContainerRequestFeatures) SetFuse(v bool) {
	o.Fuse = &v
}

// GetKeyctl returns the Keyctl field value if set, zero value otherwise.
func (o *CreateContainerRequestFeatures) GetKeyctl() bool {
	if o == nil || IsNil(o.Keyctl) {
		var ret bool
		return ret
	}
	return *o.Keyctl
}

// GetKeyctlOk returns a tuple with the Keyctl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestFeatures) GetKeyctlOk() (*bool, bool) {
	if o == nil || IsNil(o.Keyctl) {
		return nil, false
	}
	return o.Keyctl, true
}

// HasKeyctl returns a boolean if a field has been set.
func (o *CreateContainerRequestFeatures) HasKeyctl() bool {
	if o != nil && !IsNil(o.Keyctl) {
		return true
	}

	return false
}

// SetKeyctl gets a reference to the given bool and assigns it to the Keyctl field.
func (o *CreateContainerRequestFeatures) SetKeyctl(v bool) {
	o.Keyctl = &v
}

// GetMknod returns the Mknod field value if set, zero value otherwise.
func (o *CreateContainerRequestFeatures) GetMknod() bool {
	if o == nil || IsNil(o.Mknod) {
		var ret bool
		return ret
	}
	return *o.Mknod
}

// GetMknodOk returns a tuple with the Mknod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestFeatures) GetMknodOk() (*bool, bool) {
	if o == nil || IsNil(o.Mknod) {
		return nil, false
	}
	return o.Mknod, true
}

// HasMknod returns a boolean if a field has been set.
func (o *CreateContainerRequestFeatures) HasMknod() bool {
	if o != nil && !IsNil(o.Mknod) {
		return true
	}

	return false
}

// SetMknod gets a reference to the given bool and assigns it to the Mknod field.
func (o *CreateContainerRequestFeatures) SetMknod(v bool) {
	o.Mknod = &v
}

// GetMount returns the Mount field value if set, zero value otherwise.
func (o *CreateContainerRequestFeatures) GetMount() string {
	if o == nil || IsNil(o.Mount) {
		var ret string
		return ret
	}
	return *o.Mount
}

// GetMountOk returns a tuple with the Mount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestFeatures) GetMountOk() (*string, bool) {
	if o == nil || IsNil(o.Mount) {
		return nil, false
	}
	return o.Mount, true
}

// HasMount returns a boolean if a field has been set.
func (o *CreateContainerRequestFeatures) HasMount() bool {
	if o != nil && !IsNil(o.Mount) {
		return true
	}

	return false
}

// SetMount gets a reference to the given string and assigns it to the Mount field.
func (o *CreateContainerRequestFeatures) SetMount(v string) {
	o.Mount = &v
}

// GetNesting returns the Nesting field value if set, zero value otherwise.
func (o *CreateContainerRequestFeatures) GetNesting() bool {
	if o == nil || IsNil(o.Nesting) {
		var ret bool
		return ret
	}
	return *o.Nesting
}

// GetNestingOk returns a tuple with the Nesting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestFeatures) GetNestingOk() (*bool, bool) {
	if o == nil || IsNil(o.Nesting) {
		return nil, false
	}
	return o.Nesting, true
}

// HasNesting returns a boolean if a field has been set.
func (o *CreateContainerRequestFeatures) HasNesting() bool {
	if o != nil && !IsNil(o.Nesting) {
		return true
	}

	return false
}

// SetNesting gets a reference to the given bool and assigns it to the Nesting field.
func (o *CreateContainerRequestFeatures) SetNesting(v bool) {
	o.Nesting = &v
}

func (o CreateContainerRequestFeatures) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateContainerRequestFeatures) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ForceRwSys) {
		toSerialize["force_rw_sys"] = o.ForceRwSys
	}
	if !IsNil(o.Fuse) {
		toSerialize["fuse"] = o.Fuse
	}
	if !IsNil(o.Keyctl) {
		toSerialize["keyctl"] = o.Keyctl
	}
	if !IsNil(o.Mknod) {
		toSerialize["mknod"] = o.Mknod
	}
	if !IsNil(o.Mount) {
		toSerialize["mount"] = o.Mount
	}
	if !IsNil(o.Nesting) {
		toSerialize["nesting"] = o.Nesting
	}
	return toSerialize, nil
}

type NullableCreateContainerRequestFeatures struct {
	value *CreateContainerRequestFeatures
	isSet bool
}

func (v NullableCreateContainerRequestFeatures) Get() *CreateContainerRequestFeatures {
	return v.value
}

func (v *NullableCreateContainerRequestFeatures) Set(val *CreateContainerRequestFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateContainerRequestFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateContainerRequestFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateContainerRequestFeatures(val *CreateContainerRequestFeatures) *NullableCreateContainerRequestFeatures {
	return &NullableCreateContainerRequestFeatures{value: val, isSet: true}
}

func (v NullableCreateContainerRequestFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateContainerRequestFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


