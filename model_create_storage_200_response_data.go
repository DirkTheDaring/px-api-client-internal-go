/*
ProxMox VE API

ProxMox VE API

API version: 8.3
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the CreateStorage200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateStorage200ResponseData{}

// CreateStorage200ResponseData 
type CreateStorage200ResponseData struct {
	Config *CreateStorage200ResponseDataConfig `json:"config,omitempty"`
	// The ID of the created storage.
	Storage *string `json:"storage,omitempty"`
	// The type of the created storage.
	Type *string `json:"type,omitempty"`
}

// NewCreateStorage200ResponseData instantiates a new CreateStorage200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStorage200ResponseData() *CreateStorage200ResponseData {
	this := CreateStorage200ResponseData{}
	return &this
}

// NewCreateStorage200ResponseDataWithDefaults instantiates a new CreateStorage200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStorage200ResponseDataWithDefaults() *CreateStorage200ResponseData {
	this := CreateStorage200ResponseData{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *CreateStorage200ResponseData) GetConfig() CreateStorage200ResponseDataConfig {
	if o == nil || IsNil(o.Config) {
		var ret CreateStorage200ResponseDataConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorage200ResponseData) GetConfigOk() (*CreateStorage200ResponseDataConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *CreateStorage200ResponseData) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given CreateStorage200ResponseDataConfig and assigns it to the Config field.
func (o *CreateStorage200ResponseData) SetConfig(v CreateStorage200ResponseDataConfig) {
	o.Config = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *CreateStorage200ResponseData) GetStorage() string {
	if o == nil || IsNil(o.Storage) {
		var ret string
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorage200ResponseData) GetStorageOk() (*string, bool) {
	if o == nil || IsNil(o.Storage) {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *CreateStorage200ResponseData) HasStorage() bool {
	if o != nil && !IsNil(o.Storage) {
		return true
	}

	return false
}

// SetStorage gets a reference to the given string and assigns it to the Storage field.
func (o *CreateStorage200ResponseData) SetStorage(v string) {
	o.Storage = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateStorage200ResponseData) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorage200ResponseData) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateStorage200ResponseData) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CreateStorage200ResponseData) SetType(v string) {
	o.Type = &v
}

func (o CreateStorage200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateStorage200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Storage) {
		toSerialize["storage"] = o.Storage
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableCreateStorage200ResponseData struct {
	value *CreateStorage200ResponseData
	isSet bool
}

func (v NullableCreateStorage200ResponseData) Get() *CreateStorage200ResponseData {
	return v.value
}

func (v *NullableCreateStorage200ResponseData) Set(val *CreateStorage200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStorage200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStorage200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStorage200ResponseData(val *CreateStorage200ResponseData) *NullableCreateStorage200ResponseData {
	return &NullableCreateStorage200ResponseData{value: val, isSet: true}
}

func (v NullableCreateStorage200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStorage200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


