/*
ProxMox VE API

ProxMox VE API

API version: 8.0
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the GetVMConfig200ResponseDataVga type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVMConfig200ResponseDataVga{}

// GetVMConfig200ResponseDataVga struct for GetVMConfig200ResponseDataVga
type GetVMConfig200ResponseDataVga struct {
	// Sets the VGA memory (in MiB). Has no effect with serial display.
	Memory *int64 `json:"memory,omitempty"`
	// Select the VGA type.
	Type *string `json:"type,omitempty"`
}

// NewGetVMConfig200ResponseDataVga instantiates a new GetVMConfig200ResponseDataVga object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVMConfig200ResponseDataVga() *GetVMConfig200ResponseDataVga {
	this := GetVMConfig200ResponseDataVga{}
	return &this
}

// NewGetVMConfig200ResponseDataVgaWithDefaults instantiates a new GetVMConfig200ResponseDataVga object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVMConfig200ResponseDataVgaWithDefaults() *GetVMConfig200ResponseDataVga {
	this := GetVMConfig200ResponseDataVga{}
	return &this
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *GetVMConfig200ResponseDataVga) GetMemory() int64 {
	if o == nil || IsNil(o.Memory) {
		var ret int64
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMConfig200ResponseDataVga) GetMemoryOk() (*int64, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *GetVMConfig200ResponseDataVga) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int64 and assigns it to the Memory field.
func (o *GetVMConfig200ResponseDataVga) SetMemory(v int64) {
	o.Memory = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetVMConfig200ResponseDataVga) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMConfig200ResponseDataVga) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetVMConfig200ResponseDataVga) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetVMConfig200ResponseDataVga) SetType(v string) {
	o.Type = &v
}

func (o GetVMConfig200ResponseDataVga) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVMConfig200ResponseDataVga) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetVMConfig200ResponseDataVga struct {
	value *GetVMConfig200ResponseDataVga
	isSet bool
}

func (v NullableGetVMConfig200ResponseDataVga) Get() *GetVMConfig200ResponseDataVga {
	return v.value
}

func (v *NullableGetVMConfig200ResponseDataVga) Set(val *GetVMConfig200ResponseDataVga) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVMConfig200ResponseDataVga) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVMConfig200ResponseDataVga) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVMConfig200ResponseDataVga(val *GetVMConfig200ResponseDataVga) *NullableGetVMConfig200ResponseDataVga {
	return &NullableGetVMConfig200ResponseDataVga{value: val, isSet: true}
}

func (v NullableGetVMConfig200ResponseDataVga) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVMConfig200ResponseDataVga) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


