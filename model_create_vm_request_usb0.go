/*
ProxMox VE API

ProxMox VE API

API version: 8.3
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the CreateVMRequestUsb0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVMRequestUsb0{}

// CreateVMRequestUsb0 struct for CreateVMRequestUsb0
type CreateVMRequestUsb0 struct {
	Host *string `json:"host,omitempty"`
	Mapping *string `json:"mapping,omitempty"`
	Usb3 *bool `json:"usb3,omitempty"`
}

// NewCreateVMRequestUsb0 instantiates a new CreateVMRequestUsb0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVMRequestUsb0() *CreateVMRequestUsb0 {
	this := CreateVMRequestUsb0{}
	return &this
}

// NewCreateVMRequestUsb0WithDefaults instantiates a new CreateVMRequestUsb0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVMRequestUsb0WithDefaults() *CreateVMRequestUsb0 {
	this := CreateVMRequestUsb0{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *CreateVMRequestUsb0) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestUsb0) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *CreateVMRequestUsb0) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *CreateVMRequestUsb0) SetHost(v string) {
	o.Host = &v
}

// GetMapping returns the Mapping field value if set, zero value otherwise.
func (o *CreateVMRequestUsb0) GetMapping() string {
	if o == nil || IsNil(o.Mapping) {
		var ret string
		return ret
	}
	return *o.Mapping
}

// GetMappingOk returns a tuple with the Mapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestUsb0) GetMappingOk() (*string, bool) {
	if o == nil || IsNil(o.Mapping) {
		return nil, false
	}
	return o.Mapping, true
}

// HasMapping returns a boolean if a field has been set.
func (o *CreateVMRequestUsb0) HasMapping() bool {
	if o != nil && !IsNil(o.Mapping) {
		return true
	}

	return false
}

// SetMapping gets a reference to the given string and assigns it to the Mapping field.
func (o *CreateVMRequestUsb0) SetMapping(v string) {
	o.Mapping = &v
}

// GetUsb3 returns the Usb3 field value if set, zero value otherwise.
func (o *CreateVMRequestUsb0) GetUsb3() bool {
	if o == nil || IsNil(o.Usb3) {
		var ret bool
		return ret
	}
	return *o.Usb3
}

// GetUsb3Ok returns a tuple with the Usb3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestUsb0) GetUsb3Ok() (*bool, bool) {
	if o == nil || IsNil(o.Usb3) {
		return nil, false
	}
	return o.Usb3, true
}

// HasUsb3 returns a boolean if a field has been set.
func (o *CreateVMRequestUsb0) HasUsb3() bool {
	if o != nil && !IsNil(o.Usb3) {
		return true
	}

	return false
}

// SetUsb3 gets a reference to the given bool and assigns it to the Usb3 field.
func (o *CreateVMRequestUsb0) SetUsb3(v bool) {
	o.Usb3 = &v
}

func (o CreateVMRequestUsb0) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVMRequestUsb0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Mapping) {
		toSerialize["mapping"] = o.Mapping
	}
	if !IsNil(o.Usb3) {
		toSerialize["usb3"] = o.Usb3
	}
	return toSerialize, nil
}

type NullableCreateVMRequestUsb0 struct {
	value *CreateVMRequestUsb0
	isSet bool
}

func (v NullableCreateVMRequestUsb0) Get() *CreateVMRequestUsb0 {
	return v.value
}

func (v *NullableCreateVMRequestUsb0) Set(val *CreateVMRequestUsb0) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVMRequestUsb0) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVMRequestUsb0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVMRequestUsb0(val *CreateVMRequestUsb0) *NullableCreateVMRequestUsb0 {
	return &NullableCreateVMRequestUsb0{value: val, isSet: true}
}

func (v NullableCreateVMRequestUsb0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVMRequestUsb0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


