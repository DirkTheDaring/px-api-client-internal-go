/*
ProxMox VE API

ProxMox VE API

API version: 8.0
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the CreateStorageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateStorageRequest{}

// CreateStorageRequest struct for CreateStorageRequest
type CreateStorageRequest struct {
	// Authsupported.
	Authsupported *string `json:"authsupported,omitempty"`
	// Base volume. This volume is automatically activated.
	Base *string `json:"base,omitempty"`
	// block size
	Blocksize *string `json:"blocksize,omitempty"`
	Bwlimit *CreateStorageRequestBwlimit `json:"bwlimit,omitempty"`
	// host group for comstar views
	ComstarHg *string `json:"comstar_hg,omitempty"`
	// target group for comstar views
	ComstarTg *string `json:"comstar_tg,omitempty"`
	// Allowed content types.  NOTE: the value 'rootdir' is used for Containers, and value 'images' for VMs. 
	Content *string `json:"content,omitempty"`
	// Overrides for default content type directories.
	ContentDirs *string `json:"content-dirs,omitempty"`
	// Create the base directory if it doesn't exist.
	CreateBasePath *int32 `json:"create-base-path,omitempty"`
	// Populate the directory with the default structure.
	CreateSubdirs *int32 `json:"create-subdirs,omitempty"`
	// Data Pool (for erasure coding only)
	DataPool *string `json:"data-pool,omitempty"`
	// Proxmox Backup Server datastore name.
	Datastore *string `json:"datastore,omitempty"`
	// Flag to disable the storage.
	Disable *int32 `json:"disable,omitempty"`
	// CIFS domain.
	Domain *string `json:"domain,omitempty"`
	// Encryption key. Use 'autogen' to generate one automatically without passphrase.
	EncryptionKey *string `json:"encryption-key,omitempty"`
	// NFS export path.
	Export *string `json:"export,omitempty"`
	// Certificate SHA 256 fingerprint.
	Fingerprint *string `json:"fingerprint,omitempty"`
	// Default image format.
	Format *string `json:"format,omitempty"`
	// The Ceph filesystem name.
	FsName *string `json:"fs-name,omitempty"`
	// Mount CephFS through FUSE.
	Fuse *int32 `json:"fuse,omitempty"`
	// Assume the given path is an externally managed mountpoint and consider the storage offline if it is not mounted. Using a boolean (yes/no) value serves as a shortcut to using the target path in this field.
	IsMountpoint *string `json:"is_mountpoint,omitempty"`
	// iscsi provider
	Iscsiprovider *string `json:"iscsiprovider,omitempty"`
	// Client keyring contents (for external clusters).
	Keyring *string `json:"keyring,omitempty"`
	// Always access rbd through krbd kernel module.
	Krbd *int32 `json:"krbd,omitempty"`
	// target portal group for Linux LIO targets
	LioTpg *string `json:"lio_tpg,omitempty"`
	// Base64-encoded, PEM-formatted public RSA key. Used to encrypt a copy of the encryption-key which will be added to each encrypted backup.
	MasterPubkey *string `json:"master-pubkey,omitempty"`
	// Maximal number of protected backups per guest. Use '-1' for unlimited.
	MaxProtectedBackups *int64 `json:"max-protected-backups,omitempty"`
	// Deprecated: use 'prune-backups' instead. Maximal number of backup files per VM. Use '0' for unlimited.
	Maxfiles *int64 `json:"maxfiles,omitempty"`
	// Create the directory if it doesn't exist and populate it with default sub-dirs. NOTE: Deprecated, use the 'create-base-path' and 'create-subdirs' options instead.
	Mkdir *int32 `json:"mkdir,omitempty"`
	// IP addresses of monitors (for external clusters).
	Monhost *string `json:"monhost,omitempty"`
	// mount point
	Mountpoint *string `json:"mountpoint,omitempty"`
	// Namespace.
	Namespace *string `json:"namespace,omitempty"`
	// Set the NOCOW flag on files. Disables data checksumming and causes data errors to be unrecoverable from while allowing direct I/O. Only use this if data does not need to be any more safe than on a single ext4 formatted disk with no underlying raid system.
	Nocow *int32 `json:"nocow,omitempty"`
	// List of cluster node names.
	Nodes *string `json:"nodes,omitempty"`
	// disable write caching on the target
	Nowritecache *int32 `json:"nowritecache,omitempty"`
	// NFS/CIFS mount options (see 'man nfs' or 'man mount.cifs')
	Options *string `json:"options,omitempty"`
	// Password for accessing the share/datastore.
	Password *string `json:"password,omitempty"`
	// File system path.
	Path *string `json:"path,omitempty"`
	// Pool.
	Pool *string `json:"pool,omitempty"`
	// For non default port.
	Port *int64 `json:"port,omitempty"`
	// iSCSI portal (IP or DNS name with optional port).
	Portal *string `json:"portal,omitempty"`
	// Preallocation mode for raw and qcow2 images. Using 'metadata' on raw images results in preallocation=off.
	Preallocation *string `json:"preallocation,omitempty"`
	// The retention options with shorter intervals are processed first with --keep-last being the very first one. Each option covers a specific period of time. We say that backups within this period are covered by this option. The next option does not take care of already covered backups and only considers older backups.
	PruneBackups *string `json:"prune-backups,omitempty"`
	// Zero-out data when removing LVs.
	Saferemove *int32 `json:"saferemove,omitempty"`
	// Wipe throughput (cstream -t parameter value).
	SaferemoveThroughput *string `json:"saferemove_throughput,omitempty"`
	// Server IP or DNS name.
	Server *string `json:"server,omitempty"`
	// Backup volfile server IP or DNS name.
	Server2 *string `json:"server2,omitempty"`
	// CIFS share.
	Share *string `json:"share,omitempty"`
	// Mark storage as shared.
	Shared *int32 `json:"shared,omitempty"`
	// SMB protocol version. 'default' if not set, negotiates the highest SMB2+ version supported by both the client and server.
	Smbversion *string `json:"smbversion,omitempty"`
	// use sparse volumes
	Sparse *int32 `json:"sparse,omitempty"`
	// The storage identifier.
	Storage string `json:"storage"`
	// Subdir to mount.
	Subdir *string `json:"subdir,omitempty"`
	// Only use logical volumes tagged with 'pve-vm-ID'.
	TaggedOnly *int32 `json:"tagged_only,omitempty"`
	// iSCSI target.
	Target *string `json:"target,omitempty"`
	// LVM thin pool LV name.
	Thinpool *string `json:"thinpool,omitempty"`
	// Gluster transport: tcp or rdma
	Transport *string `json:"transport,omitempty"`
	// Storage type.
	Type string `json:"type"`
	// RBD Id.
	Username *string `json:"username,omitempty"`
	// Volume group name.
	Vgname *string `json:"vgname,omitempty"`
	// Glusterfs Volume.
	Volume *string `json:"volume,omitempty"`
}

// NewCreateStorageRequest instantiates a new CreateStorageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStorageRequest(storage string, type_ string) *CreateStorageRequest {
	this := CreateStorageRequest{}
	this.Storage = storage
	this.Type = type_
	return &this
}

// NewCreateStorageRequestWithDefaults instantiates a new CreateStorageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStorageRequestWithDefaults() *CreateStorageRequest {
	this := CreateStorageRequest{}
	return &this
}

// GetAuthsupported returns the Authsupported field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetAuthsupported() string {
	if o == nil || IsNil(o.Authsupported) {
		var ret string
		return ret
	}
	return *o.Authsupported
}

// GetAuthsupportedOk returns a tuple with the Authsupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetAuthsupportedOk() (*string, bool) {
	if o == nil || IsNil(o.Authsupported) {
		return nil, false
	}
	return o.Authsupported, true
}

// HasAuthsupported returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasAuthsupported() bool {
	if o != nil && !IsNil(o.Authsupported) {
		return true
	}

	return false
}

// SetAuthsupported gets a reference to the given string and assigns it to the Authsupported field.
func (o *CreateStorageRequest) SetAuthsupported(v string) {
	o.Authsupported = &v
}

// GetBase returns the Base field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetBase() string {
	if o == nil || IsNil(o.Base) {
		var ret string
		return ret
	}
	return *o.Base
}

// GetBaseOk returns a tuple with the Base field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetBaseOk() (*string, bool) {
	if o == nil || IsNil(o.Base) {
		return nil, false
	}
	return o.Base, true
}

// HasBase returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasBase() bool {
	if o != nil && !IsNil(o.Base) {
		return true
	}

	return false
}

// SetBase gets a reference to the given string and assigns it to the Base field.
func (o *CreateStorageRequest) SetBase(v string) {
	o.Base = &v
}

// GetBlocksize returns the Blocksize field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetBlocksize() string {
	if o == nil || IsNil(o.Blocksize) {
		var ret string
		return ret
	}
	return *o.Blocksize
}

// GetBlocksizeOk returns a tuple with the Blocksize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetBlocksizeOk() (*string, bool) {
	if o == nil || IsNil(o.Blocksize) {
		return nil, false
	}
	return o.Blocksize, true
}

// HasBlocksize returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasBlocksize() bool {
	if o != nil && !IsNil(o.Blocksize) {
		return true
	}

	return false
}

// SetBlocksize gets a reference to the given string and assigns it to the Blocksize field.
func (o *CreateStorageRequest) SetBlocksize(v string) {
	o.Blocksize = &v
}

// GetBwlimit returns the Bwlimit field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetBwlimit() CreateStorageRequestBwlimit {
	if o == nil || IsNil(o.Bwlimit) {
		var ret CreateStorageRequestBwlimit
		return ret
	}
	return *o.Bwlimit
}

// GetBwlimitOk returns a tuple with the Bwlimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetBwlimitOk() (*CreateStorageRequestBwlimit, bool) {
	if o == nil || IsNil(o.Bwlimit) {
		return nil, false
	}
	return o.Bwlimit, true
}

// HasBwlimit returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasBwlimit() bool {
	if o != nil && !IsNil(o.Bwlimit) {
		return true
	}

	return false
}

// SetBwlimit gets a reference to the given CreateStorageRequestBwlimit and assigns it to the Bwlimit field.
func (o *CreateStorageRequest) SetBwlimit(v CreateStorageRequestBwlimit) {
	o.Bwlimit = &v
}

// GetComstarHg returns the ComstarHg field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetComstarHg() string {
	if o == nil || IsNil(o.ComstarHg) {
		var ret string
		return ret
	}
	return *o.ComstarHg
}

// GetComstarHgOk returns a tuple with the ComstarHg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetComstarHgOk() (*string, bool) {
	if o == nil || IsNil(o.ComstarHg) {
		return nil, false
	}
	return o.ComstarHg, true
}

// HasComstarHg returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasComstarHg() bool {
	if o != nil && !IsNil(o.ComstarHg) {
		return true
	}

	return false
}

// SetComstarHg gets a reference to the given string and assigns it to the ComstarHg field.
func (o *CreateStorageRequest) SetComstarHg(v string) {
	o.ComstarHg = &v
}

// GetComstarTg returns the ComstarTg field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetComstarTg() string {
	if o == nil || IsNil(o.ComstarTg) {
		var ret string
		return ret
	}
	return *o.ComstarTg
}

// GetComstarTgOk returns a tuple with the ComstarTg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetComstarTgOk() (*string, bool) {
	if o == nil || IsNil(o.ComstarTg) {
		return nil, false
	}
	return o.ComstarTg, true
}

// HasComstarTg returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasComstarTg() bool {
	if o != nil && !IsNil(o.ComstarTg) {
		return true
	}

	return false
}

// SetComstarTg gets a reference to the given string and assigns it to the ComstarTg field.
func (o *CreateStorageRequest) SetComstarTg(v string) {
	o.ComstarTg = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *CreateStorageRequest) SetContent(v string) {
	o.Content = &v
}

// GetContentDirs returns the ContentDirs field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetContentDirs() string {
	if o == nil || IsNil(o.ContentDirs) {
		var ret string
		return ret
	}
	return *o.ContentDirs
}

// GetContentDirsOk returns a tuple with the ContentDirs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetContentDirsOk() (*string, bool) {
	if o == nil || IsNil(o.ContentDirs) {
		return nil, false
	}
	return o.ContentDirs, true
}

// HasContentDirs returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasContentDirs() bool {
	if o != nil && !IsNil(o.ContentDirs) {
		return true
	}

	return false
}

// SetContentDirs gets a reference to the given string and assigns it to the ContentDirs field.
func (o *CreateStorageRequest) SetContentDirs(v string) {
	o.ContentDirs = &v
}

// GetCreateBasePath returns the CreateBasePath field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetCreateBasePath() int32 {
	if o == nil || IsNil(o.CreateBasePath) {
		var ret int32
		return ret
	}
	return *o.CreateBasePath
}

// GetCreateBasePathOk returns a tuple with the CreateBasePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetCreateBasePathOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateBasePath) {
		return nil, false
	}
	return o.CreateBasePath, true
}

// HasCreateBasePath returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasCreateBasePath() bool {
	if o != nil && !IsNil(o.CreateBasePath) {
		return true
	}

	return false
}

// SetCreateBasePath gets a reference to the given int32 and assigns it to the CreateBasePath field.
func (o *CreateStorageRequest) SetCreateBasePath(v int32) {
	o.CreateBasePath = &v
}

// GetCreateSubdirs returns the CreateSubdirs field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetCreateSubdirs() int32 {
	if o == nil || IsNil(o.CreateSubdirs) {
		var ret int32
		return ret
	}
	return *o.CreateSubdirs
}

// GetCreateSubdirsOk returns a tuple with the CreateSubdirs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetCreateSubdirsOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateSubdirs) {
		return nil, false
	}
	return o.CreateSubdirs, true
}

// HasCreateSubdirs returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasCreateSubdirs() bool {
	if o != nil && !IsNil(o.CreateSubdirs) {
		return true
	}

	return false
}

// SetCreateSubdirs gets a reference to the given int32 and assigns it to the CreateSubdirs field.
func (o *CreateStorageRequest) SetCreateSubdirs(v int32) {
	o.CreateSubdirs = &v
}

// GetDataPool returns the DataPool field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetDataPool() string {
	if o == nil || IsNil(o.DataPool) {
		var ret string
		return ret
	}
	return *o.DataPool
}

// GetDataPoolOk returns a tuple with the DataPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetDataPoolOk() (*string, bool) {
	if o == nil || IsNil(o.DataPool) {
		return nil, false
	}
	return o.DataPool, true
}

// HasDataPool returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasDataPool() bool {
	if o != nil && !IsNil(o.DataPool) {
		return true
	}

	return false
}

// SetDataPool gets a reference to the given string and assigns it to the DataPool field.
func (o *CreateStorageRequest) SetDataPool(v string) {
	o.DataPool = &v
}

// GetDatastore returns the Datastore field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetDatastore() string {
	if o == nil || IsNil(o.Datastore) {
		var ret string
		return ret
	}
	return *o.Datastore
}

// GetDatastoreOk returns a tuple with the Datastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetDatastoreOk() (*string, bool) {
	if o == nil || IsNil(o.Datastore) {
		return nil, false
	}
	return o.Datastore, true
}

// HasDatastore returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasDatastore() bool {
	if o != nil && !IsNil(o.Datastore) {
		return true
	}

	return false
}

// SetDatastore gets a reference to the given string and assigns it to the Datastore field.
func (o *CreateStorageRequest) SetDatastore(v string) {
	o.Datastore = &v
}

// GetDisable returns the Disable field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetDisable() int32 {
	if o == nil || IsNil(o.Disable) {
		var ret int32
		return ret
	}
	return *o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetDisableOk() (*int32, bool) {
	if o == nil || IsNil(o.Disable) {
		return nil, false
	}
	return o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasDisable() bool {
	if o != nil && !IsNil(o.Disable) {
		return true
	}

	return false
}

// SetDisable gets a reference to the given int32 and assigns it to the Disable field.
func (o *CreateStorageRequest) SetDisable(v int32) {
	o.Disable = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *CreateStorageRequest) SetDomain(v string) {
	o.Domain = &v
}

// GetEncryptionKey returns the EncryptionKey field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetEncryptionKey() string {
	if o == nil || IsNil(o.EncryptionKey) {
		var ret string
		return ret
	}
	return *o.EncryptionKey
}

// GetEncryptionKeyOk returns a tuple with the EncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetEncryptionKeyOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptionKey) {
		return nil, false
	}
	return o.EncryptionKey, true
}

// HasEncryptionKey returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasEncryptionKey() bool {
	if o != nil && !IsNil(o.EncryptionKey) {
		return true
	}

	return false
}

// SetEncryptionKey gets a reference to the given string and assigns it to the EncryptionKey field.
func (o *CreateStorageRequest) SetEncryptionKey(v string) {
	o.EncryptionKey = &v
}

// GetExport returns the Export field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetExport() string {
	if o == nil || IsNil(o.Export) {
		var ret string
		return ret
	}
	return *o.Export
}

// GetExportOk returns a tuple with the Export field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetExportOk() (*string, bool) {
	if o == nil || IsNil(o.Export) {
		return nil, false
	}
	return o.Export, true
}

// HasExport returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasExport() bool {
	if o != nil && !IsNil(o.Export) {
		return true
	}

	return false
}

// SetExport gets a reference to the given string and assigns it to the Export field.
func (o *CreateStorageRequest) SetExport(v string) {
	o.Export = &v
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetFingerprint() string {
	if o == nil || IsNil(o.Fingerprint) {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetFingerprintOk() (*string, bool) {
	if o == nil || IsNil(o.Fingerprint) {
		return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasFingerprint() bool {
	if o != nil && !IsNil(o.Fingerprint) {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *CreateStorageRequest) SetFingerprint(v string) {
	o.Fingerprint = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *CreateStorageRequest) SetFormat(v string) {
	o.Format = &v
}

// GetFsName returns the FsName field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetFsName() string {
	if o == nil || IsNil(o.FsName) {
		var ret string
		return ret
	}
	return *o.FsName
}

// GetFsNameOk returns a tuple with the FsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetFsNameOk() (*string, bool) {
	if o == nil || IsNil(o.FsName) {
		return nil, false
	}
	return o.FsName, true
}

// HasFsName returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasFsName() bool {
	if o != nil && !IsNil(o.FsName) {
		return true
	}

	return false
}

// SetFsName gets a reference to the given string and assigns it to the FsName field.
func (o *CreateStorageRequest) SetFsName(v string) {
	o.FsName = &v
}

// GetFuse returns the Fuse field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetFuse() int32 {
	if o == nil || IsNil(o.Fuse) {
		var ret int32
		return ret
	}
	return *o.Fuse
}

// GetFuseOk returns a tuple with the Fuse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetFuseOk() (*int32, bool) {
	if o == nil || IsNil(o.Fuse) {
		return nil, false
	}
	return o.Fuse, true
}

// HasFuse returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasFuse() bool {
	if o != nil && !IsNil(o.Fuse) {
		return true
	}

	return false
}

// SetFuse gets a reference to the given int32 and assigns it to the Fuse field.
func (o *CreateStorageRequest) SetFuse(v int32) {
	o.Fuse = &v
}

// GetIsMountpoint returns the IsMountpoint field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetIsMountpoint() string {
	if o == nil || IsNil(o.IsMountpoint) {
		var ret string
		return ret
	}
	return *o.IsMountpoint
}

// GetIsMountpointOk returns a tuple with the IsMountpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetIsMountpointOk() (*string, bool) {
	if o == nil || IsNil(o.IsMountpoint) {
		return nil, false
	}
	return o.IsMountpoint, true
}

// HasIsMountpoint returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasIsMountpoint() bool {
	if o != nil && !IsNil(o.IsMountpoint) {
		return true
	}

	return false
}

// SetIsMountpoint gets a reference to the given string and assigns it to the IsMountpoint field.
func (o *CreateStorageRequest) SetIsMountpoint(v string) {
	o.IsMountpoint = &v
}

// GetIscsiprovider returns the Iscsiprovider field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetIscsiprovider() string {
	if o == nil || IsNil(o.Iscsiprovider) {
		var ret string
		return ret
	}
	return *o.Iscsiprovider
}

// GetIscsiproviderOk returns a tuple with the Iscsiprovider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetIscsiproviderOk() (*string, bool) {
	if o == nil || IsNil(o.Iscsiprovider) {
		return nil, false
	}
	return o.Iscsiprovider, true
}

// HasIscsiprovider returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasIscsiprovider() bool {
	if o != nil && !IsNil(o.Iscsiprovider) {
		return true
	}

	return false
}

// SetIscsiprovider gets a reference to the given string and assigns it to the Iscsiprovider field.
func (o *CreateStorageRequest) SetIscsiprovider(v string) {
	o.Iscsiprovider = &v
}

// GetKeyring returns the Keyring field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetKeyring() string {
	if o == nil || IsNil(o.Keyring) {
		var ret string
		return ret
	}
	return *o.Keyring
}

// GetKeyringOk returns a tuple with the Keyring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetKeyringOk() (*string, bool) {
	if o == nil || IsNil(o.Keyring) {
		return nil, false
	}
	return o.Keyring, true
}

// HasKeyring returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasKeyring() bool {
	if o != nil && !IsNil(o.Keyring) {
		return true
	}

	return false
}

// SetKeyring gets a reference to the given string and assigns it to the Keyring field.
func (o *CreateStorageRequest) SetKeyring(v string) {
	o.Keyring = &v
}

// GetKrbd returns the Krbd field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetKrbd() int32 {
	if o == nil || IsNil(o.Krbd) {
		var ret int32
		return ret
	}
	return *o.Krbd
}

// GetKrbdOk returns a tuple with the Krbd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetKrbdOk() (*int32, bool) {
	if o == nil || IsNil(o.Krbd) {
		return nil, false
	}
	return o.Krbd, true
}

// HasKrbd returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasKrbd() bool {
	if o != nil && !IsNil(o.Krbd) {
		return true
	}

	return false
}

// SetKrbd gets a reference to the given int32 and assigns it to the Krbd field.
func (o *CreateStorageRequest) SetKrbd(v int32) {
	o.Krbd = &v
}

// GetLioTpg returns the LioTpg field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetLioTpg() string {
	if o == nil || IsNil(o.LioTpg) {
		var ret string
		return ret
	}
	return *o.LioTpg
}

// GetLioTpgOk returns a tuple with the LioTpg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetLioTpgOk() (*string, bool) {
	if o == nil || IsNil(o.LioTpg) {
		return nil, false
	}
	return o.LioTpg, true
}

// HasLioTpg returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasLioTpg() bool {
	if o != nil && !IsNil(o.LioTpg) {
		return true
	}

	return false
}

// SetLioTpg gets a reference to the given string and assigns it to the LioTpg field.
func (o *CreateStorageRequest) SetLioTpg(v string) {
	o.LioTpg = &v
}

// GetMasterPubkey returns the MasterPubkey field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetMasterPubkey() string {
	if o == nil || IsNil(o.MasterPubkey) {
		var ret string
		return ret
	}
	return *o.MasterPubkey
}

// GetMasterPubkeyOk returns a tuple with the MasterPubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetMasterPubkeyOk() (*string, bool) {
	if o == nil || IsNil(o.MasterPubkey) {
		return nil, false
	}
	return o.MasterPubkey, true
}

// HasMasterPubkey returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasMasterPubkey() bool {
	if o != nil && !IsNil(o.MasterPubkey) {
		return true
	}

	return false
}

// SetMasterPubkey gets a reference to the given string and assigns it to the MasterPubkey field.
func (o *CreateStorageRequest) SetMasterPubkey(v string) {
	o.MasterPubkey = &v
}

// GetMaxProtectedBackups returns the MaxProtectedBackups field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetMaxProtectedBackups() int64 {
	if o == nil || IsNil(o.MaxProtectedBackups) {
		var ret int64
		return ret
	}
	return *o.MaxProtectedBackups
}

// GetMaxProtectedBackupsOk returns a tuple with the MaxProtectedBackups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetMaxProtectedBackupsOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxProtectedBackups) {
		return nil, false
	}
	return o.MaxProtectedBackups, true
}

// HasMaxProtectedBackups returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasMaxProtectedBackups() bool {
	if o != nil && !IsNil(o.MaxProtectedBackups) {
		return true
	}

	return false
}

// SetMaxProtectedBackups gets a reference to the given int64 and assigns it to the MaxProtectedBackups field.
func (o *CreateStorageRequest) SetMaxProtectedBackups(v int64) {
	o.MaxProtectedBackups = &v
}

// GetMaxfiles returns the Maxfiles field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetMaxfiles() int64 {
	if o == nil || IsNil(o.Maxfiles) {
		var ret int64
		return ret
	}
	return *o.Maxfiles
}

// GetMaxfilesOk returns a tuple with the Maxfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetMaxfilesOk() (*int64, bool) {
	if o == nil || IsNil(o.Maxfiles) {
		return nil, false
	}
	return o.Maxfiles, true
}

// HasMaxfiles returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasMaxfiles() bool {
	if o != nil && !IsNil(o.Maxfiles) {
		return true
	}

	return false
}

// SetMaxfiles gets a reference to the given int64 and assigns it to the Maxfiles field.
func (o *CreateStorageRequest) SetMaxfiles(v int64) {
	o.Maxfiles = &v
}

// GetMkdir returns the Mkdir field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetMkdir() int32 {
	if o == nil || IsNil(o.Mkdir) {
		var ret int32
		return ret
	}
	return *o.Mkdir
}

// GetMkdirOk returns a tuple with the Mkdir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetMkdirOk() (*int32, bool) {
	if o == nil || IsNil(o.Mkdir) {
		return nil, false
	}
	return o.Mkdir, true
}

// HasMkdir returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasMkdir() bool {
	if o != nil && !IsNil(o.Mkdir) {
		return true
	}

	return false
}

// SetMkdir gets a reference to the given int32 and assigns it to the Mkdir field.
func (o *CreateStorageRequest) SetMkdir(v int32) {
	o.Mkdir = &v
}

// GetMonhost returns the Monhost field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetMonhost() string {
	if o == nil || IsNil(o.Monhost) {
		var ret string
		return ret
	}
	return *o.Monhost
}

// GetMonhostOk returns a tuple with the Monhost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetMonhostOk() (*string, bool) {
	if o == nil || IsNil(o.Monhost) {
		return nil, false
	}
	return o.Monhost, true
}

// HasMonhost returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasMonhost() bool {
	if o != nil && !IsNil(o.Monhost) {
		return true
	}

	return false
}

// SetMonhost gets a reference to the given string and assigns it to the Monhost field.
func (o *CreateStorageRequest) SetMonhost(v string) {
	o.Monhost = &v
}

// GetMountpoint returns the Mountpoint field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetMountpoint() string {
	if o == nil || IsNil(o.Mountpoint) {
		var ret string
		return ret
	}
	return *o.Mountpoint
}

// GetMountpointOk returns a tuple with the Mountpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetMountpointOk() (*string, bool) {
	if o == nil || IsNil(o.Mountpoint) {
		return nil, false
	}
	return o.Mountpoint, true
}

// HasMountpoint returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasMountpoint() bool {
	if o != nil && !IsNil(o.Mountpoint) {
		return true
	}

	return false
}

// SetMountpoint gets a reference to the given string and assigns it to the Mountpoint field.
func (o *CreateStorageRequest) SetMountpoint(v string) {
	o.Mountpoint = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *CreateStorageRequest) SetNamespace(v string) {
	o.Namespace = &v
}

// GetNocow returns the Nocow field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetNocow() int32 {
	if o == nil || IsNil(o.Nocow) {
		var ret int32
		return ret
	}
	return *o.Nocow
}

// GetNocowOk returns a tuple with the Nocow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetNocowOk() (*int32, bool) {
	if o == nil || IsNil(o.Nocow) {
		return nil, false
	}
	return o.Nocow, true
}

// HasNocow returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasNocow() bool {
	if o != nil && !IsNil(o.Nocow) {
		return true
	}

	return false
}

// SetNocow gets a reference to the given int32 and assigns it to the Nocow field.
func (o *CreateStorageRequest) SetNocow(v int32) {
	o.Nocow = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetNodes() string {
	if o == nil || IsNil(o.Nodes) {
		var ret string
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetNodesOk() (*string, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given string and assigns it to the Nodes field.
func (o *CreateStorageRequest) SetNodes(v string) {
	o.Nodes = &v
}

// GetNowritecache returns the Nowritecache field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetNowritecache() int32 {
	if o == nil || IsNil(o.Nowritecache) {
		var ret int32
		return ret
	}
	return *o.Nowritecache
}

// GetNowritecacheOk returns a tuple with the Nowritecache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetNowritecacheOk() (*int32, bool) {
	if o == nil || IsNil(o.Nowritecache) {
		return nil, false
	}
	return o.Nowritecache, true
}

// HasNowritecache returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasNowritecache() bool {
	if o != nil && !IsNil(o.Nowritecache) {
		return true
	}

	return false
}

// SetNowritecache gets a reference to the given int32 and assigns it to the Nowritecache field.
func (o *CreateStorageRequest) SetNowritecache(v int32) {
	o.Nowritecache = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetOptions() string {
	if o == nil || IsNil(o.Options) {
		var ret string
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given string and assigns it to the Options field.
func (o *CreateStorageRequest) SetOptions(v string) {
	o.Options = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateStorageRequest) SetPassword(v string) {
	o.Password = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *CreateStorageRequest) SetPath(v string) {
	o.Path = &v
}

// GetPool returns the Pool field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetPool() string {
	if o == nil || IsNil(o.Pool) {
		var ret string
		return ret
	}
	return *o.Pool
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetPoolOk() (*string, bool) {
	if o == nil || IsNil(o.Pool) {
		return nil, false
	}
	return o.Pool, true
}

// HasPool returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasPool() bool {
	if o != nil && !IsNil(o.Pool) {
		return true
	}

	return false
}

// SetPool gets a reference to the given string and assigns it to the Pool field.
func (o *CreateStorageRequest) SetPool(v string) {
	o.Pool = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *CreateStorageRequest) SetPort(v int64) {
	o.Port = &v
}

// GetPortal returns the Portal field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetPortal() string {
	if o == nil || IsNil(o.Portal) {
		var ret string
		return ret
	}
	return *o.Portal
}

// GetPortalOk returns a tuple with the Portal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetPortalOk() (*string, bool) {
	if o == nil || IsNil(o.Portal) {
		return nil, false
	}
	return o.Portal, true
}

// HasPortal returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasPortal() bool {
	if o != nil && !IsNil(o.Portal) {
		return true
	}

	return false
}

// SetPortal gets a reference to the given string and assigns it to the Portal field.
func (o *CreateStorageRequest) SetPortal(v string) {
	o.Portal = &v
}

// GetPreallocation returns the Preallocation field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetPreallocation() string {
	if o == nil || IsNil(o.Preallocation) {
		var ret string
		return ret
	}
	return *o.Preallocation
}

// GetPreallocationOk returns a tuple with the Preallocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetPreallocationOk() (*string, bool) {
	if o == nil || IsNil(o.Preallocation) {
		return nil, false
	}
	return o.Preallocation, true
}

// HasPreallocation returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasPreallocation() bool {
	if o != nil && !IsNil(o.Preallocation) {
		return true
	}

	return false
}

// SetPreallocation gets a reference to the given string and assigns it to the Preallocation field.
func (o *CreateStorageRequest) SetPreallocation(v string) {
	o.Preallocation = &v
}

// GetPruneBackups returns the PruneBackups field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetPruneBackups() string {
	if o == nil || IsNil(o.PruneBackups) {
		var ret string
		return ret
	}
	return *o.PruneBackups
}

// GetPruneBackupsOk returns a tuple with the PruneBackups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetPruneBackupsOk() (*string, bool) {
	if o == nil || IsNil(o.PruneBackups) {
		return nil, false
	}
	return o.PruneBackups, true
}

// HasPruneBackups returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasPruneBackups() bool {
	if o != nil && !IsNil(o.PruneBackups) {
		return true
	}

	return false
}

// SetPruneBackups gets a reference to the given string and assigns it to the PruneBackups field.
func (o *CreateStorageRequest) SetPruneBackups(v string) {
	o.PruneBackups = &v
}

// GetSaferemove returns the Saferemove field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetSaferemove() int32 {
	if o == nil || IsNil(o.Saferemove) {
		var ret int32
		return ret
	}
	return *o.Saferemove
}

// GetSaferemoveOk returns a tuple with the Saferemove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetSaferemoveOk() (*int32, bool) {
	if o == nil || IsNil(o.Saferemove) {
		return nil, false
	}
	return o.Saferemove, true
}

// HasSaferemove returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasSaferemove() bool {
	if o != nil && !IsNil(o.Saferemove) {
		return true
	}

	return false
}

// SetSaferemove gets a reference to the given int32 and assigns it to the Saferemove field.
func (o *CreateStorageRequest) SetSaferemove(v int32) {
	o.Saferemove = &v
}

// GetSaferemoveThroughput returns the SaferemoveThroughput field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetSaferemoveThroughput() string {
	if o == nil || IsNil(o.SaferemoveThroughput) {
		var ret string
		return ret
	}
	return *o.SaferemoveThroughput
}

// GetSaferemoveThroughputOk returns a tuple with the SaferemoveThroughput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetSaferemoveThroughputOk() (*string, bool) {
	if o == nil || IsNil(o.SaferemoveThroughput) {
		return nil, false
	}
	return o.SaferemoveThroughput, true
}

// HasSaferemoveThroughput returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasSaferemoveThroughput() bool {
	if o != nil && !IsNil(o.SaferemoveThroughput) {
		return true
	}

	return false
}

// SetSaferemoveThroughput gets a reference to the given string and assigns it to the SaferemoveThroughput field.
func (o *CreateStorageRequest) SetSaferemoveThroughput(v string) {
	o.SaferemoveThroughput = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetServer() string {
	if o == nil || IsNil(o.Server) {
		var ret string
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetServerOk() (*string, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given string and assigns it to the Server field.
func (o *CreateStorageRequest) SetServer(v string) {
	o.Server = &v
}

// GetServer2 returns the Server2 field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetServer2() string {
	if o == nil || IsNil(o.Server2) {
		var ret string
		return ret
	}
	return *o.Server2
}

// GetServer2Ok returns a tuple with the Server2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetServer2Ok() (*string, bool) {
	if o == nil || IsNil(o.Server2) {
		return nil, false
	}
	return o.Server2, true
}

// HasServer2 returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasServer2() bool {
	if o != nil && !IsNil(o.Server2) {
		return true
	}

	return false
}

// SetServer2 gets a reference to the given string and assigns it to the Server2 field.
func (o *CreateStorageRequest) SetServer2(v string) {
	o.Server2 = &v
}

// GetShare returns the Share field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetShare() string {
	if o == nil || IsNil(o.Share) {
		var ret string
		return ret
	}
	return *o.Share
}

// GetShareOk returns a tuple with the Share field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetShareOk() (*string, bool) {
	if o == nil || IsNil(o.Share) {
		return nil, false
	}
	return o.Share, true
}

// HasShare returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasShare() bool {
	if o != nil && !IsNil(o.Share) {
		return true
	}

	return false
}

// SetShare gets a reference to the given string and assigns it to the Share field.
func (o *CreateStorageRequest) SetShare(v string) {
	o.Share = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetShared() int32 {
	if o == nil || IsNil(o.Shared) {
		var ret int32
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetSharedOk() (*int32, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given int32 and assigns it to the Shared field.
func (o *CreateStorageRequest) SetShared(v int32) {
	o.Shared = &v
}

// GetSmbversion returns the Smbversion field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetSmbversion() string {
	if o == nil || IsNil(o.Smbversion) {
		var ret string
		return ret
	}
	return *o.Smbversion
}

// GetSmbversionOk returns a tuple with the Smbversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetSmbversionOk() (*string, bool) {
	if o == nil || IsNil(o.Smbversion) {
		return nil, false
	}
	return o.Smbversion, true
}

// HasSmbversion returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasSmbversion() bool {
	if o != nil && !IsNil(o.Smbversion) {
		return true
	}

	return false
}

// SetSmbversion gets a reference to the given string and assigns it to the Smbversion field.
func (o *CreateStorageRequest) SetSmbversion(v string) {
	o.Smbversion = &v
}

// GetSparse returns the Sparse field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetSparse() int32 {
	if o == nil || IsNil(o.Sparse) {
		var ret int32
		return ret
	}
	return *o.Sparse
}

// GetSparseOk returns a tuple with the Sparse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetSparseOk() (*int32, bool) {
	if o == nil || IsNil(o.Sparse) {
		return nil, false
	}
	return o.Sparse, true
}

// HasSparse returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasSparse() bool {
	if o != nil && !IsNil(o.Sparse) {
		return true
	}

	return false
}

// SetSparse gets a reference to the given int32 and assigns it to the Sparse field.
func (o *CreateStorageRequest) SetSparse(v int32) {
	o.Sparse = &v
}

// GetStorage returns the Storage field value
func (o *CreateStorageRequest) GetStorage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetStorageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *CreateStorageRequest) SetStorage(v string) {
	o.Storage = v
}

// GetSubdir returns the Subdir field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetSubdir() string {
	if o == nil || IsNil(o.Subdir) {
		var ret string
		return ret
	}
	return *o.Subdir
}

// GetSubdirOk returns a tuple with the Subdir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetSubdirOk() (*string, bool) {
	if o == nil || IsNil(o.Subdir) {
		return nil, false
	}
	return o.Subdir, true
}

// HasSubdir returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasSubdir() bool {
	if o != nil && !IsNil(o.Subdir) {
		return true
	}

	return false
}

// SetSubdir gets a reference to the given string and assigns it to the Subdir field.
func (o *CreateStorageRequest) SetSubdir(v string) {
	o.Subdir = &v
}

// GetTaggedOnly returns the TaggedOnly field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetTaggedOnly() int32 {
	if o == nil || IsNil(o.TaggedOnly) {
		var ret int32
		return ret
	}
	return *o.TaggedOnly
}

// GetTaggedOnlyOk returns a tuple with the TaggedOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetTaggedOnlyOk() (*int32, bool) {
	if o == nil || IsNil(o.TaggedOnly) {
		return nil, false
	}
	return o.TaggedOnly, true
}

// HasTaggedOnly returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasTaggedOnly() bool {
	if o != nil && !IsNil(o.TaggedOnly) {
		return true
	}

	return false
}

// SetTaggedOnly gets a reference to the given int32 and assigns it to the TaggedOnly field.
func (o *CreateStorageRequest) SetTaggedOnly(v int32) {
	o.TaggedOnly = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *CreateStorageRequest) SetTarget(v string) {
	o.Target = &v
}

// GetThinpool returns the Thinpool field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetThinpool() string {
	if o == nil || IsNil(o.Thinpool) {
		var ret string
		return ret
	}
	return *o.Thinpool
}

// GetThinpoolOk returns a tuple with the Thinpool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetThinpoolOk() (*string, bool) {
	if o == nil || IsNil(o.Thinpool) {
		return nil, false
	}
	return o.Thinpool, true
}

// HasThinpool returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasThinpool() bool {
	if o != nil && !IsNil(o.Thinpool) {
		return true
	}

	return false
}

// SetThinpool gets a reference to the given string and assigns it to the Thinpool field.
func (o *CreateStorageRequest) SetThinpool(v string) {
	o.Thinpool = &v
}

// GetTransport returns the Transport field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetTransport() string {
	if o == nil || IsNil(o.Transport) {
		var ret string
		return ret
	}
	return *o.Transport
}

// GetTransportOk returns a tuple with the Transport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetTransportOk() (*string, bool) {
	if o == nil || IsNil(o.Transport) {
		return nil, false
	}
	return o.Transport, true
}

// HasTransport returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasTransport() bool {
	if o != nil && !IsNil(o.Transport) {
		return true
	}

	return false
}

// SetTransport gets a reference to the given string and assigns it to the Transport field.
func (o *CreateStorageRequest) SetTransport(v string) {
	o.Transport = &v
}

// GetType returns the Type field value
func (o *CreateStorageRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateStorageRequest) SetType(v string) {
	o.Type = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *CreateStorageRequest) SetUsername(v string) {
	o.Username = &v
}

// GetVgname returns the Vgname field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetVgname() string {
	if o == nil || IsNil(o.Vgname) {
		var ret string
		return ret
	}
	return *o.Vgname
}

// GetVgnameOk returns a tuple with the Vgname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetVgnameOk() (*string, bool) {
	if o == nil || IsNil(o.Vgname) {
		return nil, false
	}
	return o.Vgname, true
}

// HasVgname returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasVgname() bool {
	if o != nil && !IsNil(o.Vgname) {
		return true
	}

	return false
}

// SetVgname gets a reference to the given string and assigns it to the Vgname field.
func (o *CreateStorageRequest) SetVgname(v string) {
	o.Vgname = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *CreateStorageRequest) GetVolume() string {
	if o == nil || IsNil(o.Volume) {
		var ret string
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageRequest) GetVolumeOk() (*string, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *CreateStorageRequest) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given string and assigns it to the Volume field.
func (o *CreateStorageRequest) SetVolume(v string) {
	o.Volume = &v
}

func (o CreateStorageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateStorageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authsupported) {
		toSerialize["authsupported"] = o.Authsupported
	}
	if !IsNil(o.Base) {
		toSerialize["base"] = o.Base
	}
	if !IsNil(o.Blocksize) {
		toSerialize["blocksize"] = o.Blocksize
	}
	if !IsNil(o.Bwlimit) {
		toSerialize["bwlimit"] = o.Bwlimit
	}
	if !IsNil(o.ComstarHg) {
		toSerialize["comstar_hg"] = o.ComstarHg
	}
	if !IsNil(o.ComstarTg) {
		toSerialize["comstar_tg"] = o.ComstarTg
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.ContentDirs) {
		toSerialize["content-dirs"] = o.ContentDirs
	}
	if !IsNil(o.CreateBasePath) {
		toSerialize["create-base-path"] = o.CreateBasePath
	}
	if !IsNil(o.CreateSubdirs) {
		toSerialize["create-subdirs"] = o.CreateSubdirs
	}
	if !IsNil(o.DataPool) {
		toSerialize["data-pool"] = o.DataPool
	}
	if !IsNil(o.Datastore) {
		toSerialize["datastore"] = o.Datastore
	}
	if !IsNil(o.Disable) {
		toSerialize["disable"] = o.Disable
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.EncryptionKey) {
		toSerialize["encryption-key"] = o.EncryptionKey
	}
	if !IsNil(o.Export) {
		toSerialize["export"] = o.Export
	}
	if !IsNil(o.Fingerprint) {
		toSerialize["fingerprint"] = o.Fingerprint
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.FsName) {
		toSerialize["fs-name"] = o.FsName
	}
	if !IsNil(o.Fuse) {
		toSerialize["fuse"] = o.Fuse
	}
	if !IsNil(o.IsMountpoint) {
		toSerialize["is_mountpoint"] = o.IsMountpoint
	}
	if !IsNil(o.Iscsiprovider) {
		toSerialize["iscsiprovider"] = o.Iscsiprovider
	}
	if !IsNil(o.Keyring) {
		toSerialize["keyring"] = o.Keyring
	}
	if !IsNil(o.Krbd) {
		toSerialize["krbd"] = o.Krbd
	}
	if !IsNil(o.LioTpg) {
		toSerialize["lio_tpg"] = o.LioTpg
	}
	if !IsNil(o.MasterPubkey) {
		toSerialize["master-pubkey"] = o.MasterPubkey
	}
	if !IsNil(o.MaxProtectedBackups) {
		toSerialize["max-protected-backups"] = o.MaxProtectedBackups
	}
	if !IsNil(o.Maxfiles) {
		toSerialize["maxfiles"] = o.Maxfiles
	}
	if !IsNil(o.Mkdir) {
		toSerialize["mkdir"] = o.Mkdir
	}
	if !IsNil(o.Monhost) {
		toSerialize["monhost"] = o.Monhost
	}
	if !IsNil(o.Mountpoint) {
		toSerialize["mountpoint"] = o.Mountpoint
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Nocow) {
		toSerialize["nocow"] = o.Nocow
	}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if !IsNil(o.Nowritecache) {
		toSerialize["nowritecache"] = o.Nowritecache
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Pool) {
		toSerialize["pool"] = o.Pool
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Portal) {
		toSerialize["portal"] = o.Portal
	}
	if !IsNil(o.Preallocation) {
		toSerialize["preallocation"] = o.Preallocation
	}
	if !IsNil(o.PruneBackups) {
		toSerialize["prune-backups"] = o.PruneBackups
	}
	if !IsNil(o.Saferemove) {
		toSerialize["saferemove"] = o.Saferemove
	}
	if !IsNil(o.SaferemoveThroughput) {
		toSerialize["saferemove_throughput"] = o.SaferemoveThroughput
	}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !IsNil(o.Server2) {
		toSerialize["server2"] = o.Server2
	}
	if !IsNil(o.Share) {
		toSerialize["share"] = o.Share
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.Smbversion) {
		toSerialize["smbversion"] = o.Smbversion
	}
	if !IsNil(o.Sparse) {
		toSerialize["sparse"] = o.Sparse
	}
	toSerialize["storage"] = o.Storage
	if !IsNil(o.Subdir) {
		toSerialize["subdir"] = o.Subdir
	}
	if !IsNil(o.TaggedOnly) {
		toSerialize["tagged_only"] = o.TaggedOnly
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.Thinpool) {
		toSerialize["thinpool"] = o.Thinpool
	}
	if !IsNil(o.Transport) {
		toSerialize["transport"] = o.Transport
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Vgname) {
		toSerialize["vgname"] = o.Vgname
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return toSerialize, nil
}

type NullableCreateStorageRequest struct {
	value *CreateStorageRequest
	isSet bool
}

func (v NullableCreateStorageRequest) Get() *CreateStorageRequest {
	return v.value
}

func (v *NullableCreateStorageRequest) Set(val *CreateStorageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStorageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStorageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStorageRequest(val *CreateStorageRequest) *NullableCreateStorageRequest {
	return &NullableCreateStorageRequest{value: val, isSet: true}
}

func (v NullableCreateStorageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStorageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


