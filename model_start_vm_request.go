/*
ProxMox VE API

ProxMox VE API

API version: 8.0
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the StartVMRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StartVMRequest{}

// StartVMRequest struct for StartVMRequest
type StartVMRequest struct {
	// Override QEMU's -cpu argument with the given string.
	ForceCpu *string `json:"force-cpu,omitempty"`
	// Specifies the QEMU machine type.
	Machine *string `json:"machine,omitempty"`
	// The cluster node name.
	Migratedfrom *string `json:"migratedfrom,omitempty"`
	// CIDR of the (sub) network that is used for migration.
	MigrationNetwork *string `json:"migration_network,omitempty"`
	// Migration traffic is encrypted using an SSH tunnel by default. On secure, completely private networks this can be disabled to increase performance.
	MigrationType *string `json:"migration_type,omitempty"`
	// Ignore locks - only root is allowed to use this option.
	Skiplock *bool `json:"skiplock,omitempty"`
	// Some command save/restore state from this location.
	Stateuri *string `json:"stateuri,omitempty"`
	// Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself.
	Targetstorage *string `json:"targetstorage,omitempty"`
	// Wait maximal timeout seconds.
	Timeout *int64 `json:"timeout,omitempty"`
}

// NewStartVMRequest instantiates a new StartVMRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartVMRequest() *StartVMRequest {
	this := StartVMRequest{}
	return &this
}

// NewStartVMRequestWithDefaults instantiates a new StartVMRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartVMRequestWithDefaults() *StartVMRequest {
	this := StartVMRequest{}
	return &this
}

// GetForceCpu returns the ForceCpu field value if set, zero value otherwise.
func (o *StartVMRequest) GetForceCpu() string {
	if o == nil || IsNil(o.ForceCpu) {
		var ret string
		return ret
	}
	return *o.ForceCpu
}

// GetForceCpuOk returns a tuple with the ForceCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVMRequest) GetForceCpuOk() (*string, bool) {
	if o == nil || IsNil(o.ForceCpu) {
		return nil, false
	}
	return o.ForceCpu, true
}

// HasForceCpu returns a boolean if a field has been set.
func (o *StartVMRequest) HasForceCpu() bool {
	if o != nil && !IsNil(o.ForceCpu) {
		return true
	}

	return false
}

// SetForceCpu gets a reference to the given string and assigns it to the ForceCpu field.
func (o *StartVMRequest) SetForceCpu(v string) {
	o.ForceCpu = &v
}

// GetMachine returns the Machine field value if set, zero value otherwise.
func (o *StartVMRequest) GetMachine() string {
	if o == nil || IsNil(o.Machine) {
		var ret string
		return ret
	}
	return *o.Machine
}

// GetMachineOk returns a tuple with the Machine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVMRequest) GetMachineOk() (*string, bool) {
	if o == nil || IsNil(o.Machine) {
		return nil, false
	}
	return o.Machine, true
}

// HasMachine returns a boolean if a field has been set.
func (o *StartVMRequest) HasMachine() bool {
	if o != nil && !IsNil(o.Machine) {
		return true
	}

	return false
}

// SetMachine gets a reference to the given string and assigns it to the Machine field.
func (o *StartVMRequest) SetMachine(v string) {
	o.Machine = &v
}

// GetMigratedfrom returns the Migratedfrom field value if set, zero value otherwise.
func (o *StartVMRequest) GetMigratedfrom() string {
	if o == nil || IsNil(o.Migratedfrom) {
		var ret string
		return ret
	}
	return *o.Migratedfrom
}

// GetMigratedfromOk returns a tuple with the Migratedfrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVMRequest) GetMigratedfromOk() (*string, bool) {
	if o == nil || IsNil(o.Migratedfrom) {
		return nil, false
	}
	return o.Migratedfrom, true
}

// HasMigratedfrom returns a boolean if a field has been set.
func (o *StartVMRequest) HasMigratedfrom() bool {
	if o != nil && !IsNil(o.Migratedfrom) {
		return true
	}

	return false
}

// SetMigratedfrom gets a reference to the given string and assigns it to the Migratedfrom field.
func (o *StartVMRequest) SetMigratedfrom(v string) {
	o.Migratedfrom = &v
}

// GetMigrationNetwork returns the MigrationNetwork field value if set, zero value otherwise.
func (o *StartVMRequest) GetMigrationNetwork() string {
	if o == nil || IsNil(o.MigrationNetwork) {
		var ret string
		return ret
	}
	return *o.MigrationNetwork
}

// GetMigrationNetworkOk returns a tuple with the MigrationNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVMRequest) GetMigrationNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.MigrationNetwork) {
		return nil, false
	}
	return o.MigrationNetwork, true
}

// HasMigrationNetwork returns a boolean if a field has been set.
func (o *StartVMRequest) HasMigrationNetwork() bool {
	if o != nil && !IsNil(o.MigrationNetwork) {
		return true
	}

	return false
}

// SetMigrationNetwork gets a reference to the given string and assigns it to the MigrationNetwork field.
func (o *StartVMRequest) SetMigrationNetwork(v string) {
	o.MigrationNetwork = &v
}

// GetMigrationType returns the MigrationType field value if set, zero value otherwise.
func (o *StartVMRequest) GetMigrationType() string {
	if o == nil || IsNil(o.MigrationType) {
		var ret string
		return ret
	}
	return *o.MigrationType
}

// GetMigrationTypeOk returns a tuple with the MigrationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVMRequest) GetMigrationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MigrationType) {
		return nil, false
	}
	return o.MigrationType, true
}

// HasMigrationType returns a boolean if a field has been set.
func (o *StartVMRequest) HasMigrationType() bool {
	if o != nil && !IsNil(o.MigrationType) {
		return true
	}

	return false
}

// SetMigrationType gets a reference to the given string and assigns it to the MigrationType field.
func (o *StartVMRequest) SetMigrationType(v string) {
	o.MigrationType = &v
}

// GetSkiplock returns the Skiplock field value if set, zero value otherwise.
func (o *StartVMRequest) GetSkiplock() bool {
	if o == nil || IsNil(o.Skiplock) {
		var ret bool
		return ret
	}
	return *o.Skiplock
}

// GetSkiplockOk returns a tuple with the Skiplock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVMRequest) GetSkiplockOk() (*bool, bool) {
	if o == nil || IsNil(o.Skiplock) {
		return nil, false
	}
	return o.Skiplock, true
}

// HasSkiplock returns a boolean if a field has been set.
func (o *StartVMRequest) HasSkiplock() bool {
	if o != nil && !IsNil(o.Skiplock) {
		return true
	}

	return false
}

// SetSkiplock gets a reference to the given bool and assigns it to the Skiplock field.
func (o *StartVMRequest) SetSkiplock(v bool) {
	o.Skiplock = &v
}

// GetStateuri returns the Stateuri field value if set, zero value otherwise.
func (o *StartVMRequest) GetStateuri() string {
	if o == nil || IsNil(o.Stateuri) {
		var ret string
		return ret
	}
	return *o.Stateuri
}

// GetStateuriOk returns a tuple with the Stateuri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVMRequest) GetStateuriOk() (*string, bool) {
	if o == nil || IsNil(o.Stateuri) {
		return nil, false
	}
	return o.Stateuri, true
}

// HasStateuri returns a boolean if a field has been set.
func (o *StartVMRequest) HasStateuri() bool {
	if o != nil && !IsNil(o.Stateuri) {
		return true
	}

	return false
}

// SetStateuri gets a reference to the given string and assigns it to the Stateuri field.
func (o *StartVMRequest) SetStateuri(v string) {
	o.Stateuri = &v
}

// GetTargetstorage returns the Targetstorage field value if set, zero value otherwise.
func (o *StartVMRequest) GetTargetstorage() string {
	if o == nil || IsNil(o.Targetstorage) {
		var ret string
		return ret
	}
	return *o.Targetstorage
}

// GetTargetstorageOk returns a tuple with the Targetstorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVMRequest) GetTargetstorageOk() (*string, bool) {
	if o == nil || IsNil(o.Targetstorage) {
		return nil, false
	}
	return o.Targetstorage, true
}

// HasTargetstorage returns a boolean if a field has been set.
func (o *StartVMRequest) HasTargetstorage() bool {
	if o != nil && !IsNil(o.Targetstorage) {
		return true
	}

	return false
}

// SetTargetstorage gets a reference to the given string and assigns it to the Targetstorage field.
func (o *StartVMRequest) SetTargetstorage(v string) {
	o.Targetstorage = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *StartVMRequest) GetTimeout() int64 {
	if o == nil || IsNil(o.Timeout) {
		var ret int64
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartVMRequest) GetTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *StartVMRequest) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int64 and assigns it to the Timeout field.
func (o *StartVMRequest) SetTimeout(v int64) {
	o.Timeout = &v
}

func (o StartVMRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StartVMRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ForceCpu) {
		toSerialize["force-cpu"] = o.ForceCpu
	}
	if !IsNil(o.Machine) {
		toSerialize["machine"] = o.Machine
	}
	if !IsNil(o.Migratedfrom) {
		toSerialize["migratedfrom"] = o.Migratedfrom
	}
	if !IsNil(o.MigrationNetwork) {
		toSerialize["migration_network"] = o.MigrationNetwork
	}
	if !IsNil(o.MigrationType) {
		toSerialize["migration_type"] = o.MigrationType
	}
	if !IsNil(o.Skiplock) {
		toSerialize["skiplock"] = o.Skiplock
	}
	if !IsNil(o.Stateuri) {
		toSerialize["stateuri"] = o.Stateuri
	}
	if !IsNil(o.Targetstorage) {
		toSerialize["targetstorage"] = o.Targetstorage
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	return toSerialize, nil
}

type NullableStartVMRequest struct {
	value *StartVMRequest
	isSet bool
}

func (v NullableStartVMRequest) Get() *StartVMRequest {
	return v.value
}

func (v *NullableStartVMRequest) Set(val *StartVMRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStartVMRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStartVMRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartVMRequest(val *StartVMRequest) *NullableStartVMRequest {
	return &NullableStartVMRequest{value: val, isSet: true}
}

func (v NullableStartVMRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartVMRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


