/*
ProxMox VE API

ProxMox VE API

API version: 8.0
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the CreateVMRequestScsi0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVMRequestScsi0{}

// CreateVMRequestScsi0 struct for CreateVMRequestScsi0
type CreateVMRequestScsi0 struct {
	// AIO type to use.
	Aio *string `json:"aio,omitempty"`
	// Whether the drive should be included when making backups.
	Backup *bool `json:"backup,omitempty"`
	// Maximum r/w speed in bytes per second.
	Bps *int64 `json:"bps,omitempty"`
	// Maximum length of I/O bursts in seconds.
	BpsMaxLength *int64 `json:"bps_max_length,omitempty"`
	// Maximum read speed in bytes per second.
	BpsRd *int64 `json:"bps_rd,omitempty"`
	BpsRdLength *string `json:"bps_rd_length,omitempty"`
	// Maximum length of read I/O bursts in seconds.
	BpsRdMaxLength *int64 `json:"bps_rd_max_length,omitempty"`
	// Maximum write speed in bytes per second.
	BpsWr *int64 `json:"bps_wr,omitempty"`
	BpsWrLength *string `json:"bps_wr_length,omitempty"`
	// Maximum length of write I/O bursts in seconds.
	BpsWrMaxLength *int64 `json:"bps_wr_max_length,omitempty"`
	// The drive's cache mode
	Cache *string `json:"cache,omitempty"`
	// Force the drive's physical geometry to have a specific cylinder count.
	Cyls *int64 `json:"cyls,omitempty"`
	// Controls whether to detect and try to optimize writes of zeroes.
	DetectZeroes *bool `json:"detect_zeroes,omitempty"`
	// Controls whether to pass discard/trim requests to the underlying storage.
	Discard *string `json:"discard,omitempty"`
	// The drive's backing volume.
	File *string `json:"file,omitempty"`
	// The drive's backing file's data format.
	Format *string `json:"format,omitempty"`
	// Force the drive's physical geometry to have a specific head count.
	Heads *int64 `json:"heads,omitempty"`
	// Create a new disk, importing from this source (volume ID or absolute path). When an absolute path is specified, it's up to you to ensure that the source is not actively used by another process during the import!
	ImportFrom *string `json:"import-from,omitempty"`
	// Maximum r/w I/O in operations per second.
	Iops *int64 `json:"iops,omitempty"`
	// Maximum unthrottled r/w I/O pool in operations per second.
	IopsMax *int64 `json:"iops_max,omitempty"`
	// Maximum length of I/O bursts in seconds.
	IopsMaxLength *int64 `json:"iops_max_length,omitempty"`
	// Maximum read I/O in operations per second.
	IopsRd *int64 `json:"iops_rd,omitempty"`
	IopsRdLength *string `json:"iops_rd_length,omitempty"`
	// Maximum unthrottled read I/O pool in operations per second.
	IopsRdMax *int64 `json:"iops_rd_max,omitempty"`
	// Maximum length of read I/O bursts in seconds.
	IopsRdMaxLength *int64 `json:"iops_rd_max_length,omitempty"`
	// Maximum write I/O in operations per second.
	IopsWr *int64 `json:"iops_wr,omitempty"`
	IopsWrLength *string `json:"iops_wr_length,omitempty"`
	// Maximum unthrottled write I/O pool in operations per second.
	IopsWrMax *int64 `json:"iops_wr_max,omitempty"`
	// Maximum length of write I/O bursts in seconds.
	IopsWrMaxLength *int64 `json:"iops_wr_max_length,omitempty"`
	// Whether to use iothreads for this drive
	Iothread *bool `json:"iothread,omitempty"`
	// Maximum r/w speed in megabytes per second.
	Mbps *float32 `json:"mbps,omitempty"`
	// Maximum unthrottled r/w pool in megabytes per second.
	MbpsMax *float32 `json:"mbps_max,omitempty"`
	// Maximum read speed in megabytes per second.
	MbpsRd *float32 `json:"mbps_rd,omitempty"`
	// Maximum unthrottled read pool in megabytes per second.
	MbpsRdMax *float32 `json:"mbps_rd_max,omitempty"`
	// Maximum write speed in megabytes per second.
	MbpsWr *float32 `json:"mbps_wr,omitempty"`
	// Maximum unthrottled write pool in megabytes per second.
	MbpsWrMax *float32 `json:"mbps_wr_max,omitempty"`
	// The drive's media type.
	Media *string `json:"media,omitempty"`
	// Number of queues.
	Queues *int64 `json:"queues,omitempty"`
	// Whether the drive should considered for replication jobs.
	Replicate *bool `json:"replicate,omitempty"`
	// Read error action.
	Rerror *string `json:"rerror,omitempty"`
	// Whether the drive is read-only.
	Ro *bool `json:"ro,omitempty"`
	// whether to use scsi-block for full passthrough of host block device  WARNING: can lead to I/O errors in combination with low memory or high memory fragmentation on host
	Scsiblock *bool `json:"scsiblock,omitempty"`
	// Force the drive's physical geometry to have a specific sector count.
	Secs *int64 `json:"secs,omitempty"`
	// The drive's reported serial number, url-encoded, up to 20 bytes long.
	Serial *string `json:"serial,omitempty"`
	// Mark this locally-managed volume as available on all nodes
	Shared *bool `json:"shared,omitempty"`
	// Disk size. This is purely informational and has no effect.
	Size *string `json:"size,omitempty"`
	// Controls qemu's snapshot mode feature. If activated, changes made to the disk are temporary and will be discarded when the VM is shutdown.
	Snapshot *bool `json:"snapshot,omitempty"`
	// Whether to expose this drive as an SSD, rather than a rotational hard disk.
	Ssd *bool `json:"ssd,omitempty"`
	// Force disk geometry bios translation mode.
	Trans *string `json:"trans,omitempty"`
	Volume *string `json:"volume,omitempty"`
	// Write error action.
	Werror *string `json:"werror,omitempty"`
	// The drive's worldwide name, encoded as 16 bytes hex string, prefixed by '0x'.
	Wwn *string `json:"wwn,omitempty"`
}

// NewCreateVMRequestScsi0 instantiates a new CreateVMRequestScsi0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVMRequestScsi0() *CreateVMRequestScsi0 {
	this := CreateVMRequestScsi0{}
	return &this
}

// NewCreateVMRequestScsi0WithDefaults instantiates a new CreateVMRequestScsi0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVMRequestScsi0WithDefaults() *CreateVMRequestScsi0 {
	this := CreateVMRequestScsi0{}
	return &this
}

// GetAio returns the Aio field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetAio() string {
	if o == nil || IsNil(o.Aio) {
		var ret string
		return ret
	}
	return *o.Aio
}

// GetAioOk returns a tuple with the Aio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetAioOk() (*string, bool) {
	if o == nil || IsNil(o.Aio) {
		return nil, false
	}
	return o.Aio, true
}

// HasAio returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasAio() bool {
	if o != nil && !IsNil(o.Aio) {
		return true
	}

	return false
}

// SetAio gets a reference to the given string and assigns it to the Aio field.
func (o *CreateVMRequestScsi0) SetAio(v string) {
	o.Aio = &v
}

// GetBackup returns the Backup field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetBackup() bool {
	if o == nil || IsNil(o.Backup) {
		var ret bool
		return ret
	}
	return *o.Backup
}

// GetBackupOk returns a tuple with the Backup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetBackupOk() (*bool, bool) {
	if o == nil || IsNil(o.Backup) {
		return nil, false
	}
	return o.Backup, true
}

// HasBackup returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasBackup() bool {
	if o != nil && !IsNil(o.Backup) {
		return true
	}

	return false
}

// SetBackup gets a reference to the given bool and assigns it to the Backup field.
func (o *CreateVMRequestScsi0) SetBackup(v bool) {
	o.Backup = &v
}

// GetBps returns the Bps field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetBps() int64 {
	if o == nil || IsNil(o.Bps) {
		var ret int64
		return ret
	}
	return *o.Bps
}

// GetBpsOk returns a tuple with the Bps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetBpsOk() (*int64, bool) {
	if o == nil || IsNil(o.Bps) {
		return nil, false
	}
	return o.Bps, true
}

// HasBps returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasBps() bool {
	if o != nil && !IsNil(o.Bps) {
		return true
	}

	return false
}

// SetBps gets a reference to the given int64 and assigns it to the Bps field.
func (o *CreateVMRequestScsi0) SetBps(v int64) {
	o.Bps = &v
}

// GetBpsMaxLength returns the BpsMaxLength field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetBpsMaxLength() int64 {
	if o == nil || IsNil(o.BpsMaxLength) {
		var ret int64
		return ret
	}
	return *o.BpsMaxLength
}

// GetBpsMaxLengthOk returns a tuple with the BpsMaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetBpsMaxLengthOk() (*int64, bool) {
	if o == nil || IsNil(o.BpsMaxLength) {
		return nil, false
	}
	return o.BpsMaxLength, true
}

// HasBpsMaxLength returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasBpsMaxLength() bool {
	if o != nil && !IsNil(o.BpsMaxLength) {
		return true
	}

	return false
}

// SetBpsMaxLength gets a reference to the given int64 and assigns it to the BpsMaxLength field.
func (o *CreateVMRequestScsi0) SetBpsMaxLength(v int64) {
	o.BpsMaxLength = &v
}

// GetBpsRd returns the BpsRd field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetBpsRd() int64 {
	if o == nil || IsNil(o.BpsRd) {
		var ret int64
		return ret
	}
	return *o.BpsRd
}

// GetBpsRdOk returns a tuple with the BpsRd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetBpsRdOk() (*int64, bool) {
	if o == nil || IsNil(o.BpsRd) {
		return nil, false
	}
	return o.BpsRd, true
}

// HasBpsRd returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasBpsRd() bool {
	if o != nil && !IsNil(o.BpsRd) {
		return true
	}

	return false
}

// SetBpsRd gets a reference to the given int64 and assigns it to the BpsRd field.
func (o *CreateVMRequestScsi0) SetBpsRd(v int64) {
	o.BpsRd = &v
}

// GetBpsRdLength returns the BpsRdLength field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetBpsRdLength() string {
	if o == nil || IsNil(o.BpsRdLength) {
		var ret string
		return ret
	}
	return *o.BpsRdLength
}

// GetBpsRdLengthOk returns a tuple with the BpsRdLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetBpsRdLengthOk() (*string, bool) {
	if o == nil || IsNil(o.BpsRdLength) {
		return nil, false
	}
	return o.BpsRdLength, true
}

// HasBpsRdLength returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasBpsRdLength() bool {
	if o != nil && !IsNil(o.BpsRdLength) {
		return true
	}

	return false
}

// SetBpsRdLength gets a reference to the given string and assigns it to the BpsRdLength field.
func (o *CreateVMRequestScsi0) SetBpsRdLength(v string) {
	o.BpsRdLength = &v
}

// GetBpsRdMaxLength returns the BpsRdMaxLength field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetBpsRdMaxLength() int64 {
	if o == nil || IsNil(o.BpsRdMaxLength) {
		var ret int64
		return ret
	}
	return *o.BpsRdMaxLength
}

// GetBpsRdMaxLengthOk returns a tuple with the BpsRdMaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetBpsRdMaxLengthOk() (*int64, bool) {
	if o == nil || IsNil(o.BpsRdMaxLength) {
		return nil, false
	}
	return o.BpsRdMaxLength, true
}

// HasBpsRdMaxLength returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasBpsRdMaxLength() bool {
	if o != nil && !IsNil(o.BpsRdMaxLength) {
		return true
	}

	return false
}

// SetBpsRdMaxLength gets a reference to the given int64 and assigns it to the BpsRdMaxLength field.
func (o *CreateVMRequestScsi0) SetBpsRdMaxLength(v int64) {
	o.BpsRdMaxLength = &v
}

// GetBpsWr returns the BpsWr field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetBpsWr() int64 {
	if o == nil || IsNil(o.BpsWr) {
		var ret int64
		return ret
	}
	return *o.BpsWr
}

// GetBpsWrOk returns a tuple with the BpsWr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetBpsWrOk() (*int64, bool) {
	if o == nil || IsNil(o.BpsWr) {
		return nil, false
	}
	return o.BpsWr, true
}

// HasBpsWr returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasBpsWr() bool {
	if o != nil && !IsNil(o.BpsWr) {
		return true
	}

	return false
}

// SetBpsWr gets a reference to the given int64 and assigns it to the BpsWr field.
func (o *CreateVMRequestScsi0) SetBpsWr(v int64) {
	o.BpsWr = &v
}

// GetBpsWrLength returns the BpsWrLength field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetBpsWrLength() string {
	if o == nil || IsNil(o.BpsWrLength) {
		var ret string
		return ret
	}
	return *o.BpsWrLength
}

// GetBpsWrLengthOk returns a tuple with the BpsWrLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetBpsWrLengthOk() (*string, bool) {
	if o == nil || IsNil(o.BpsWrLength) {
		return nil, false
	}
	return o.BpsWrLength, true
}

// HasBpsWrLength returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasBpsWrLength() bool {
	if o != nil && !IsNil(o.BpsWrLength) {
		return true
	}

	return false
}

// SetBpsWrLength gets a reference to the given string and assigns it to the BpsWrLength field.
func (o *CreateVMRequestScsi0) SetBpsWrLength(v string) {
	o.BpsWrLength = &v
}

// GetBpsWrMaxLength returns the BpsWrMaxLength field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetBpsWrMaxLength() int64 {
	if o == nil || IsNil(o.BpsWrMaxLength) {
		var ret int64
		return ret
	}
	return *o.BpsWrMaxLength
}

// GetBpsWrMaxLengthOk returns a tuple with the BpsWrMaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetBpsWrMaxLengthOk() (*int64, bool) {
	if o == nil || IsNil(o.BpsWrMaxLength) {
		return nil, false
	}
	return o.BpsWrMaxLength, true
}

// HasBpsWrMaxLength returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasBpsWrMaxLength() bool {
	if o != nil && !IsNil(o.BpsWrMaxLength) {
		return true
	}

	return false
}

// SetBpsWrMaxLength gets a reference to the given int64 and assigns it to the BpsWrMaxLength field.
func (o *CreateVMRequestScsi0) SetBpsWrMaxLength(v int64) {
	o.BpsWrMaxLength = &v
}

// GetCache returns the Cache field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetCache() string {
	if o == nil || IsNil(o.Cache) {
		var ret string
		return ret
	}
	return *o.Cache
}

// GetCacheOk returns a tuple with the Cache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetCacheOk() (*string, bool) {
	if o == nil || IsNil(o.Cache) {
		return nil, false
	}
	return o.Cache, true
}

// HasCache returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasCache() bool {
	if o != nil && !IsNil(o.Cache) {
		return true
	}

	return false
}

// SetCache gets a reference to the given string and assigns it to the Cache field.
func (o *CreateVMRequestScsi0) SetCache(v string) {
	o.Cache = &v
}

// GetCyls returns the Cyls field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetCyls() int64 {
	if o == nil || IsNil(o.Cyls) {
		var ret int64
		return ret
	}
	return *o.Cyls
}

// GetCylsOk returns a tuple with the Cyls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetCylsOk() (*int64, bool) {
	if o == nil || IsNil(o.Cyls) {
		return nil, false
	}
	return o.Cyls, true
}

// HasCyls returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasCyls() bool {
	if o != nil && !IsNil(o.Cyls) {
		return true
	}

	return false
}

// SetCyls gets a reference to the given int64 and assigns it to the Cyls field.
func (o *CreateVMRequestScsi0) SetCyls(v int64) {
	o.Cyls = &v
}

// GetDetectZeroes returns the DetectZeroes field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetDetectZeroes() bool {
	if o == nil || IsNil(o.DetectZeroes) {
		var ret bool
		return ret
	}
	return *o.DetectZeroes
}

// GetDetectZeroesOk returns a tuple with the DetectZeroes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetDetectZeroesOk() (*bool, bool) {
	if o == nil || IsNil(o.DetectZeroes) {
		return nil, false
	}
	return o.DetectZeroes, true
}

// HasDetectZeroes returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasDetectZeroes() bool {
	if o != nil && !IsNil(o.DetectZeroes) {
		return true
	}

	return false
}

// SetDetectZeroes gets a reference to the given bool and assigns it to the DetectZeroes field.
func (o *CreateVMRequestScsi0) SetDetectZeroes(v bool) {
	o.DetectZeroes = &v
}

// GetDiscard returns the Discard field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetDiscard() string {
	if o == nil || IsNil(o.Discard) {
		var ret string
		return ret
	}
	return *o.Discard
}

// GetDiscardOk returns a tuple with the Discard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetDiscardOk() (*string, bool) {
	if o == nil || IsNil(o.Discard) {
		return nil, false
	}
	return o.Discard, true
}

// HasDiscard returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasDiscard() bool {
	if o != nil && !IsNil(o.Discard) {
		return true
	}

	return false
}

// SetDiscard gets a reference to the given string and assigns it to the Discard field.
func (o *CreateVMRequestScsi0) SetDiscard(v string) {
	o.Discard = &v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetFile() string {
	if o == nil || IsNil(o.File) {
		var ret string
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetFileOk() (*string, bool) {
	if o == nil || IsNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasFile() bool {
	if o != nil && !IsNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given string and assigns it to the File field.
func (o *CreateVMRequestScsi0) SetFile(v string) {
	o.File = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *CreateVMRequestScsi0) SetFormat(v string) {
	o.Format = &v
}

// GetHeads returns the Heads field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetHeads() int64 {
	if o == nil || IsNil(o.Heads) {
		var ret int64
		return ret
	}
	return *o.Heads
}

// GetHeadsOk returns a tuple with the Heads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetHeadsOk() (*int64, bool) {
	if o == nil || IsNil(o.Heads) {
		return nil, false
	}
	return o.Heads, true
}

// HasHeads returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasHeads() bool {
	if o != nil && !IsNil(o.Heads) {
		return true
	}

	return false
}

// SetHeads gets a reference to the given int64 and assigns it to the Heads field.
func (o *CreateVMRequestScsi0) SetHeads(v int64) {
	o.Heads = &v
}

// GetImportFrom returns the ImportFrom field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetImportFrom() string {
	if o == nil || IsNil(o.ImportFrom) {
		var ret string
		return ret
	}
	return *o.ImportFrom
}

// GetImportFromOk returns a tuple with the ImportFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetImportFromOk() (*string, bool) {
	if o == nil || IsNil(o.ImportFrom) {
		return nil, false
	}
	return o.ImportFrom, true
}

// HasImportFrom returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasImportFrom() bool {
	if o != nil && !IsNil(o.ImportFrom) {
		return true
	}

	return false
}

// SetImportFrom gets a reference to the given string and assigns it to the ImportFrom field.
func (o *CreateVMRequestScsi0) SetImportFrom(v string) {
	o.ImportFrom = &v
}

// GetIops returns the Iops field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetIops() int64 {
	if o == nil || IsNil(o.Iops) {
		var ret int64
		return ret
	}
	return *o.Iops
}

// GetIopsOk returns a tuple with the Iops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetIopsOk() (*int64, bool) {
	if o == nil || IsNil(o.Iops) {
		return nil, false
	}
	return o.Iops, true
}

// HasIops returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasIops() bool {
	if o != nil && !IsNil(o.Iops) {
		return true
	}

	return false
}

// SetIops gets a reference to the given int64 and assigns it to the Iops field.
func (o *CreateVMRequestScsi0) SetIops(v int64) {
	o.Iops = &v
}

// GetIopsMax returns the IopsMax field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetIopsMax() int64 {
	if o == nil || IsNil(o.IopsMax) {
		var ret int64
		return ret
	}
	return *o.IopsMax
}

// GetIopsMaxOk returns a tuple with the IopsMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetIopsMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.IopsMax) {
		return nil, false
	}
	return o.IopsMax, true
}

// HasIopsMax returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasIopsMax() bool {
	if o != nil && !IsNil(o.IopsMax) {
		return true
	}

	return false
}

// SetIopsMax gets a reference to the given int64 and assigns it to the IopsMax field.
func (o *CreateVMRequestScsi0) SetIopsMax(v int64) {
	o.IopsMax = &v
}

// GetIopsMaxLength returns the IopsMaxLength field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetIopsMaxLength() int64 {
	if o == nil || IsNil(o.IopsMaxLength) {
		var ret int64
		return ret
	}
	return *o.IopsMaxLength
}

// GetIopsMaxLengthOk returns a tuple with the IopsMaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetIopsMaxLengthOk() (*int64, bool) {
	if o == nil || IsNil(o.IopsMaxLength) {
		return nil, false
	}
	return o.IopsMaxLength, true
}

// HasIopsMaxLength returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasIopsMaxLength() bool {
	if o != nil && !IsNil(o.IopsMaxLength) {
		return true
	}

	return false
}

// SetIopsMaxLength gets a reference to the given int64 and assigns it to the IopsMaxLength field.
func (o *CreateVMRequestScsi0) SetIopsMaxLength(v int64) {
	o.IopsMaxLength = &v
}

// GetIopsRd returns the IopsRd field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetIopsRd() int64 {
	if o == nil || IsNil(o.IopsRd) {
		var ret int64
		return ret
	}
	return *o.IopsRd
}

// GetIopsRdOk returns a tuple with the IopsRd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetIopsRdOk() (*int64, bool) {
	if o == nil || IsNil(o.IopsRd) {
		return nil, false
	}
	return o.IopsRd, true
}

// HasIopsRd returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasIopsRd() bool {
	if o != nil && !IsNil(o.IopsRd) {
		return true
	}

	return false
}

// SetIopsRd gets a reference to the given int64 and assigns it to the IopsRd field.
func (o *CreateVMRequestScsi0) SetIopsRd(v int64) {
	o.IopsRd = &v
}

// GetIopsRdLength returns the IopsRdLength field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetIopsRdLength() string {
	if o == nil || IsNil(o.IopsRdLength) {
		var ret string
		return ret
	}
	return *o.IopsRdLength
}

// GetIopsRdLengthOk returns a tuple with the IopsRdLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetIopsRdLengthOk() (*string, bool) {
	if o == nil || IsNil(o.IopsRdLength) {
		return nil, false
	}
	return o.IopsRdLength, true
}

// HasIopsRdLength returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasIopsRdLength() bool {
	if o != nil && !IsNil(o.IopsRdLength) {
		return true
	}

	return false
}

// SetIopsRdLength gets a reference to the given string and assigns it to the IopsRdLength field.
func (o *CreateVMRequestScsi0) SetIopsRdLength(v string) {
	o.IopsRdLength = &v
}

// GetIopsRdMax returns the IopsRdMax field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetIopsRdMax() int64 {
	if o == nil || IsNil(o.IopsRdMax) {
		var ret int64
		return ret
	}
	return *o.IopsRdMax
}

// GetIopsRdMaxOk returns a tuple with the IopsRdMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetIopsRdMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.IopsRdMax) {
		return nil, false
	}
	return o.IopsRdMax, true
}

// HasIopsRdMax returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasIopsRdMax() bool {
	if o != nil && !IsNil(o.IopsRdMax) {
		return true
	}

	return false
}

// SetIopsRdMax gets a reference to the given int64 and assigns it to the IopsRdMax field.
func (o *CreateVMRequestScsi0) SetIopsRdMax(v int64) {
	o.IopsRdMax = &v
}

// GetIopsRdMaxLength returns the IopsRdMaxLength field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetIopsRdMaxLength() int64 {
	if o == nil || IsNil(o.IopsRdMaxLength) {
		var ret int64
		return ret
	}
	return *o.IopsRdMaxLength
}

// GetIopsRdMaxLengthOk returns a tuple with the IopsRdMaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetIopsRdMaxLengthOk() (*int64, bool) {
	if o == nil || IsNil(o.IopsRdMaxLength) {
		return nil, false
	}
	return o.IopsRdMaxLength, true
}

// HasIopsRdMaxLength returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasIopsRdMaxLength() bool {
	if o != nil && !IsNil(o.IopsRdMaxLength) {
		return true
	}

	return false
}

// SetIopsRdMaxLength gets a reference to the given int64 and assigns it to the IopsRdMaxLength field.
func (o *CreateVMRequestScsi0) SetIopsRdMaxLength(v int64) {
	o.IopsRdMaxLength = &v
}

// GetIopsWr returns the IopsWr field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetIopsWr() int64 {
	if o == nil || IsNil(o.IopsWr) {
		var ret int64
		return ret
	}
	return *o.IopsWr
}

// GetIopsWrOk returns a tuple with the IopsWr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetIopsWrOk() (*int64, bool) {
	if o == nil || IsNil(o.IopsWr) {
		return nil, false
	}
	return o.IopsWr, true
}

// HasIopsWr returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasIopsWr() bool {
	if o != nil && !IsNil(o.IopsWr) {
		return true
	}

	return false
}

// SetIopsWr gets a reference to the given int64 and assigns it to the IopsWr field.
func (o *CreateVMRequestScsi0) SetIopsWr(v int64) {
	o.IopsWr = &v
}

// GetIopsWrLength returns the IopsWrLength field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetIopsWrLength() string {
	if o == nil || IsNil(o.IopsWrLength) {
		var ret string
		return ret
	}
	return *o.IopsWrLength
}

// GetIopsWrLengthOk returns a tuple with the IopsWrLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetIopsWrLengthOk() (*string, bool) {
	if o == nil || IsNil(o.IopsWrLength) {
		return nil, false
	}
	return o.IopsWrLength, true
}

// HasIopsWrLength returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasIopsWrLength() bool {
	if o != nil && !IsNil(o.IopsWrLength) {
		return true
	}

	return false
}

// SetIopsWrLength gets a reference to the given string and assigns it to the IopsWrLength field.
func (o *CreateVMRequestScsi0) SetIopsWrLength(v string) {
	o.IopsWrLength = &v
}

// GetIopsWrMax returns the IopsWrMax field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetIopsWrMax() int64 {
	if o == nil || IsNil(o.IopsWrMax) {
		var ret int64
		return ret
	}
	return *o.IopsWrMax
}

// GetIopsWrMaxOk returns a tuple with the IopsWrMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetIopsWrMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.IopsWrMax) {
		return nil, false
	}
	return o.IopsWrMax, true
}

// HasIopsWrMax returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasIopsWrMax() bool {
	if o != nil && !IsNil(o.IopsWrMax) {
		return true
	}

	return false
}

// SetIopsWrMax gets a reference to the given int64 and assigns it to the IopsWrMax field.
func (o *CreateVMRequestScsi0) SetIopsWrMax(v int64) {
	o.IopsWrMax = &v
}

// GetIopsWrMaxLength returns the IopsWrMaxLength field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetIopsWrMaxLength() int64 {
	if o == nil || IsNil(o.IopsWrMaxLength) {
		var ret int64
		return ret
	}
	return *o.IopsWrMaxLength
}

// GetIopsWrMaxLengthOk returns a tuple with the IopsWrMaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetIopsWrMaxLengthOk() (*int64, bool) {
	if o == nil || IsNil(o.IopsWrMaxLength) {
		return nil, false
	}
	return o.IopsWrMaxLength, true
}

// HasIopsWrMaxLength returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasIopsWrMaxLength() bool {
	if o != nil && !IsNil(o.IopsWrMaxLength) {
		return true
	}

	return false
}

// SetIopsWrMaxLength gets a reference to the given int64 and assigns it to the IopsWrMaxLength field.
func (o *CreateVMRequestScsi0) SetIopsWrMaxLength(v int64) {
	o.IopsWrMaxLength = &v
}

// GetIothread returns the Iothread field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetIothread() bool {
	if o == nil || IsNil(o.Iothread) {
		var ret bool
		return ret
	}
	return *o.Iothread
}

// GetIothreadOk returns a tuple with the Iothread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetIothreadOk() (*bool, bool) {
	if o == nil || IsNil(o.Iothread) {
		return nil, false
	}
	return o.Iothread, true
}

// HasIothread returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasIothread() bool {
	if o != nil && !IsNil(o.Iothread) {
		return true
	}

	return false
}

// SetIothread gets a reference to the given bool and assigns it to the Iothread field.
func (o *CreateVMRequestScsi0) SetIothread(v bool) {
	o.Iothread = &v
}

// GetMbps returns the Mbps field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetMbps() float32 {
	if o == nil || IsNil(o.Mbps) {
		var ret float32
		return ret
	}
	return *o.Mbps
}

// GetMbpsOk returns a tuple with the Mbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetMbpsOk() (*float32, bool) {
	if o == nil || IsNil(o.Mbps) {
		return nil, false
	}
	return o.Mbps, true
}

// HasMbps returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasMbps() bool {
	if o != nil && !IsNil(o.Mbps) {
		return true
	}

	return false
}

// SetMbps gets a reference to the given float32 and assigns it to the Mbps field.
func (o *CreateVMRequestScsi0) SetMbps(v float32) {
	o.Mbps = &v
}

// GetMbpsMax returns the MbpsMax field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetMbpsMax() float32 {
	if o == nil || IsNil(o.MbpsMax) {
		var ret float32
		return ret
	}
	return *o.MbpsMax
}

// GetMbpsMaxOk returns a tuple with the MbpsMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetMbpsMaxOk() (*float32, bool) {
	if o == nil || IsNil(o.MbpsMax) {
		return nil, false
	}
	return o.MbpsMax, true
}

// HasMbpsMax returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasMbpsMax() bool {
	if o != nil && !IsNil(o.MbpsMax) {
		return true
	}

	return false
}

// SetMbpsMax gets a reference to the given float32 and assigns it to the MbpsMax field.
func (o *CreateVMRequestScsi0) SetMbpsMax(v float32) {
	o.MbpsMax = &v
}

// GetMbpsRd returns the MbpsRd field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetMbpsRd() float32 {
	if o == nil || IsNil(o.MbpsRd) {
		var ret float32
		return ret
	}
	return *o.MbpsRd
}

// GetMbpsRdOk returns a tuple with the MbpsRd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetMbpsRdOk() (*float32, bool) {
	if o == nil || IsNil(o.MbpsRd) {
		return nil, false
	}
	return o.MbpsRd, true
}

// HasMbpsRd returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasMbpsRd() bool {
	if o != nil && !IsNil(o.MbpsRd) {
		return true
	}

	return false
}

// SetMbpsRd gets a reference to the given float32 and assigns it to the MbpsRd field.
func (o *CreateVMRequestScsi0) SetMbpsRd(v float32) {
	o.MbpsRd = &v
}

// GetMbpsRdMax returns the MbpsRdMax field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetMbpsRdMax() float32 {
	if o == nil || IsNil(o.MbpsRdMax) {
		var ret float32
		return ret
	}
	return *o.MbpsRdMax
}

// GetMbpsRdMaxOk returns a tuple with the MbpsRdMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetMbpsRdMaxOk() (*float32, bool) {
	if o == nil || IsNil(o.MbpsRdMax) {
		return nil, false
	}
	return o.MbpsRdMax, true
}

// HasMbpsRdMax returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasMbpsRdMax() bool {
	if o != nil && !IsNil(o.MbpsRdMax) {
		return true
	}

	return false
}

// SetMbpsRdMax gets a reference to the given float32 and assigns it to the MbpsRdMax field.
func (o *CreateVMRequestScsi0) SetMbpsRdMax(v float32) {
	o.MbpsRdMax = &v
}

// GetMbpsWr returns the MbpsWr field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetMbpsWr() float32 {
	if o == nil || IsNil(o.MbpsWr) {
		var ret float32
		return ret
	}
	return *o.MbpsWr
}

// GetMbpsWrOk returns a tuple with the MbpsWr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetMbpsWrOk() (*float32, bool) {
	if o == nil || IsNil(o.MbpsWr) {
		return nil, false
	}
	return o.MbpsWr, true
}

// HasMbpsWr returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasMbpsWr() bool {
	if o != nil && !IsNil(o.MbpsWr) {
		return true
	}

	return false
}

// SetMbpsWr gets a reference to the given float32 and assigns it to the MbpsWr field.
func (o *CreateVMRequestScsi0) SetMbpsWr(v float32) {
	o.MbpsWr = &v
}

// GetMbpsWrMax returns the MbpsWrMax field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetMbpsWrMax() float32 {
	if o == nil || IsNil(o.MbpsWrMax) {
		var ret float32
		return ret
	}
	return *o.MbpsWrMax
}

// GetMbpsWrMaxOk returns a tuple with the MbpsWrMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetMbpsWrMaxOk() (*float32, bool) {
	if o == nil || IsNil(o.MbpsWrMax) {
		return nil, false
	}
	return o.MbpsWrMax, true
}

// HasMbpsWrMax returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasMbpsWrMax() bool {
	if o != nil && !IsNil(o.MbpsWrMax) {
		return true
	}

	return false
}

// SetMbpsWrMax gets a reference to the given float32 and assigns it to the MbpsWrMax field.
func (o *CreateVMRequestScsi0) SetMbpsWrMax(v float32) {
	o.MbpsWrMax = &v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetMedia() string {
	if o == nil || IsNil(o.Media) {
		var ret string
		return ret
	}
	return *o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetMediaOk() (*string, bool) {
	if o == nil || IsNil(o.Media) {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasMedia() bool {
	if o != nil && !IsNil(o.Media) {
		return true
	}

	return false
}

// SetMedia gets a reference to the given string and assigns it to the Media field.
func (o *CreateVMRequestScsi0) SetMedia(v string) {
	o.Media = &v
}

// GetQueues returns the Queues field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetQueues() int64 {
	if o == nil || IsNil(o.Queues) {
		var ret int64
		return ret
	}
	return *o.Queues
}

// GetQueuesOk returns a tuple with the Queues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetQueuesOk() (*int64, bool) {
	if o == nil || IsNil(o.Queues) {
		return nil, false
	}
	return o.Queues, true
}

// HasQueues returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasQueues() bool {
	if o != nil && !IsNil(o.Queues) {
		return true
	}

	return false
}

// SetQueues gets a reference to the given int64 and assigns it to the Queues field.
func (o *CreateVMRequestScsi0) SetQueues(v int64) {
	o.Queues = &v
}

// GetReplicate returns the Replicate field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetReplicate() bool {
	if o == nil || IsNil(o.Replicate) {
		var ret bool
		return ret
	}
	return *o.Replicate
}

// GetReplicateOk returns a tuple with the Replicate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetReplicateOk() (*bool, bool) {
	if o == nil || IsNil(o.Replicate) {
		return nil, false
	}
	return o.Replicate, true
}

// HasReplicate returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasReplicate() bool {
	if o != nil && !IsNil(o.Replicate) {
		return true
	}

	return false
}

// SetReplicate gets a reference to the given bool and assigns it to the Replicate field.
func (o *CreateVMRequestScsi0) SetReplicate(v bool) {
	o.Replicate = &v
}

// GetRerror returns the Rerror field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetRerror() string {
	if o == nil || IsNil(o.Rerror) {
		var ret string
		return ret
	}
	return *o.Rerror
}

// GetRerrorOk returns a tuple with the Rerror field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetRerrorOk() (*string, bool) {
	if o == nil || IsNil(o.Rerror) {
		return nil, false
	}
	return o.Rerror, true
}

// HasRerror returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasRerror() bool {
	if o != nil && !IsNil(o.Rerror) {
		return true
	}

	return false
}

// SetRerror gets a reference to the given string and assigns it to the Rerror field.
func (o *CreateVMRequestScsi0) SetRerror(v string) {
	o.Rerror = &v
}

// GetRo returns the Ro field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetRo() bool {
	if o == nil || IsNil(o.Ro) {
		var ret bool
		return ret
	}
	return *o.Ro
}

// GetRoOk returns a tuple with the Ro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetRoOk() (*bool, bool) {
	if o == nil || IsNil(o.Ro) {
		return nil, false
	}
	return o.Ro, true
}

// HasRo returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasRo() bool {
	if o != nil && !IsNil(o.Ro) {
		return true
	}

	return false
}

// SetRo gets a reference to the given bool and assigns it to the Ro field.
func (o *CreateVMRequestScsi0) SetRo(v bool) {
	o.Ro = &v
}

// GetScsiblock returns the Scsiblock field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetScsiblock() bool {
	if o == nil || IsNil(o.Scsiblock) {
		var ret bool
		return ret
	}
	return *o.Scsiblock
}

// GetScsiblockOk returns a tuple with the Scsiblock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetScsiblockOk() (*bool, bool) {
	if o == nil || IsNil(o.Scsiblock) {
		return nil, false
	}
	return o.Scsiblock, true
}

// HasScsiblock returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasScsiblock() bool {
	if o != nil && !IsNil(o.Scsiblock) {
		return true
	}

	return false
}

// SetScsiblock gets a reference to the given bool and assigns it to the Scsiblock field.
func (o *CreateVMRequestScsi0) SetScsiblock(v bool) {
	o.Scsiblock = &v
}

// GetSecs returns the Secs field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetSecs() int64 {
	if o == nil || IsNil(o.Secs) {
		var ret int64
		return ret
	}
	return *o.Secs
}

// GetSecsOk returns a tuple with the Secs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetSecsOk() (*int64, bool) {
	if o == nil || IsNil(o.Secs) {
		return nil, false
	}
	return o.Secs, true
}

// HasSecs returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasSecs() bool {
	if o != nil && !IsNil(o.Secs) {
		return true
	}

	return false
}

// SetSecs gets a reference to the given int64 and assigns it to the Secs field.
func (o *CreateVMRequestScsi0) SetSecs(v int64) {
	o.Secs = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetSerial() string {
	if o == nil || IsNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetSerialOk() (*string, bool) {
	if o == nil || IsNil(o.Serial) {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasSerial() bool {
	if o != nil && !IsNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *CreateVMRequestScsi0) SetSerial(v string) {
	o.Serial = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetShared() bool {
	if o == nil || IsNil(o.Shared) {
		var ret bool
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetSharedOk() (*bool, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given bool and assigns it to the Shared field.
func (o *CreateVMRequestScsi0) SetShared(v bool) {
	o.Shared = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *CreateVMRequestScsi0) SetSize(v string) {
	o.Size = &v
}

// GetSnapshot returns the Snapshot field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetSnapshot() bool {
	if o == nil || IsNil(o.Snapshot) {
		var ret bool
		return ret
	}
	return *o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetSnapshotOk() (*bool, bool) {
	if o == nil || IsNil(o.Snapshot) {
		return nil, false
	}
	return o.Snapshot, true
}

// HasSnapshot returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasSnapshot() bool {
	if o != nil && !IsNil(o.Snapshot) {
		return true
	}

	return false
}

// SetSnapshot gets a reference to the given bool and assigns it to the Snapshot field.
func (o *CreateVMRequestScsi0) SetSnapshot(v bool) {
	o.Snapshot = &v
}

// GetSsd returns the Ssd field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetSsd() bool {
	if o == nil || IsNil(o.Ssd) {
		var ret bool
		return ret
	}
	return *o.Ssd
}

// GetSsdOk returns a tuple with the Ssd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetSsdOk() (*bool, bool) {
	if o == nil || IsNil(o.Ssd) {
		return nil, false
	}
	return o.Ssd, true
}

// HasSsd returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasSsd() bool {
	if o != nil && !IsNil(o.Ssd) {
		return true
	}

	return false
}

// SetSsd gets a reference to the given bool and assigns it to the Ssd field.
func (o *CreateVMRequestScsi0) SetSsd(v bool) {
	o.Ssd = &v
}

// GetTrans returns the Trans field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetTrans() string {
	if o == nil || IsNil(o.Trans) {
		var ret string
		return ret
	}
	return *o.Trans
}

// GetTransOk returns a tuple with the Trans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetTransOk() (*string, bool) {
	if o == nil || IsNil(o.Trans) {
		return nil, false
	}
	return o.Trans, true
}

// HasTrans returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasTrans() bool {
	if o != nil && !IsNil(o.Trans) {
		return true
	}

	return false
}

// SetTrans gets a reference to the given string and assigns it to the Trans field.
func (o *CreateVMRequestScsi0) SetTrans(v string) {
	o.Trans = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetVolume() string {
	if o == nil || IsNil(o.Volume) {
		var ret string
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetVolumeOk() (*string, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given string and assigns it to the Volume field.
func (o *CreateVMRequestScsi0) SetVolume(v string) {
	o.Volume = &v
}

// GetWerror returns the Werror field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetWerror() string {
	if o == nil || IsNil(o.Werror) {
		var ret string
		return ret
	}
	return *o.Werror
}

// GetWerrorOk returns a tuple with the Werror field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetWerrorOk() (*string, bool) {
	if o == nil || IsNil(o.Werror) {
		return nil, false
	}
	return o.Werror, true
}

// HasWerror returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasWerror() bool {
	if o != nil && !IsNil(o.Werror) {
		return true
	}

	return false
}

// SetWerror gets a reference to the given string and assigns it to the Werror field.
func (o *CreateVMRequestScsi0) SetWerror(v string) {
	o.Werror = &v
}

// GetWwn returns the Wwn field value if set, zero value otherwise.
func (o *CreateVMRequestScsi0) GetWwn() string {
	if o == nil || IsNil(o.Wwn) {
		var ret string
		return ret
	}
	return *o.Wwn
}

// GetWwnOk returns a tuple with the Wwn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequestScsi0) GetWwnOk() (*string, bool) {
	if o == nil || IsNil(o.Wwn) {
		return nil, false
	}
	return o.Wwn, true
}

// HasWwn returns a boolean if a field has been set.
func (o *CreateVMRequestScsi0) HasWwn() bool {
	if o != nil && !IsNil(o.Wwn) {
		return true
	}

	return false
}

// SetWwn gets a reference to the given string and assigns it to the Wwn field.
func (o *CreateVMRequestScsi0) SetWwn(v string) {
	o.Wwn = &v
}

func (o CreateVMRequestScsi0) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVMRequestScsi0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aio) {
		toSerialize["aio"] = o.Aio
	}
	if !IsNil(o.Backup) {
		toSerialize["backup"] = o.Backup
	}
	if !IsNil(o.Bps) {
		toSerialize["bps"] = o.Bps
	}
	if !IsNil(o.BpsMaxLength) {
		toSerialize["bps_max_length"] = o.BpsMaxLength
	}
	if !IsNil(o.BpsRd) {
		toSerialize["bps_rd"] = o.BpsRd
	}
	if !IsNil(o.BpsRdLength) {
		toSerialize["bps_rd_length"] = o.BpsRdLength
	}
	if !IsNil(o.BpsRdMaxLength) {
		toSerialize["bps_rd_max_length"] = o.BpsRdMaxLength
	}
	if !IsNil(o.BpsWr) {
		toSerialize["bps_wr"] = o.BpsWr
	}
	if !IsNil(o.BpsWrLength) {
		toSerialize["bps_wr_length"] = o.BpsWrLength
	}
	if !IsNil(o.BpsWrMaxLength) {
		toSerialize["bps_wr_max_length"] = o.BpsWrMaxLength
	}
	if !IsNil(o.Cache) {
		toSerialize["cache"] = o.Cache
	}
	if !IsNil(o.Cyls) {
		toSerialize["cyls"] = o.Cyls
	}
	if !IsNil(o.DetectZeroes) {
		toSerialize["detect_zeroes"] = o.DetectZeroes
	}
	if !IsNil(o.Discard) {
		toSerialize["discard"] = o.Discard
	}
	if !IsNil(o.File) {
		toSerialize["file"] = o.File
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Heads) {
		toSerialize["heads"] = o.Heads
	}
	if !IsNil(o.ImportFrom) {
		toSerialize["import-from"] = o.ImportFrom
	}
	if !IsNil(o.Iops) {
		toSerialize["iops"] = o.Iops
	}
	if !IsNil(o.IopsMax) {
		toSerialize["iops_max"] = o.IopsMax
	}
	if !IsNil(o.IopsMaxLength) {
		toSerialize["iops_max_length"] = o.IopsMaxLength
	}
	if !IsNil(o.IopsRd) {
		toSerialize["iops_rd"] = o.IopsRd
	}
	if !IsNil(o.IopsRdLength) {
		toSerialize["iops_rd_length"] = o.IopsRdLength
	}
	if !IsNil(o.IopsRdMax) {
		toSerialize["iops_rd_max"] = o.IopsRdMax
	}
	if !IsNil(o.IopsRdMaxLength) {
		toSerialize["iops_rd_max_length"] = o.IopsRdMaxLength
	}
	if !IsNil(o.IopsWr) {
		toSerialize["iops_wr"] = o.IopsWr
	}
	if !IsNil(o.IopsWrLength) {
		toSerialize["iops_wr_length"] = o.IopsWrLength
	}
	if !IsNil(o.IopsWrMax) {
		toSerialize["iops_wr_max"] = o.IopsWrMax
	}
	if !IsNil(o.IopsWrMaxLength) {
		toSerialize["iops_wr_max_length"] = o.IopsWrMaxLength
	}
	if !IsNil(o.Iothread) {
		toSerialize["iothread"] = o.Iothread
	}
	if !IsNil(o.Mbps) {
		toSerialize["mbps"] = o.Mbps
	}
	if !IsNil(o.MbpsMax) {
		toSerialize["mbps_max"] = o.MbpsMax
	}
	if !IsNil(o.MbpsRd) {
		toSerialize["mbps_rd"] = o.MbpsRd
	}
	if !IsNil(o.MbpsRdMax) {
		toSerialize["mbps_rd_max"] = o.MbpsRdMax
	}
	if !IsNil(o.MbpsWr) {
		toSerialize["mbps_wr"] = o.MbpsWr
	}
	if !IsNil(o.MbpsWrMax) {
		toSerialize["mbps_wr_max"] = o.MbpsWrMax
	}
	if !IsNil(o.Media) {
		toSerialize["media"] = o.Media
	}
	if !IsNil(o.Queues) {
		toSerialize["queues"] = o.Queues
	}
	if !IsNil(o.Replicate) {
		toSerialize["replicate"] = o.Replicate
	}
	if !IsNil(o.Rerror) {
		toSerialize["rerror"] = o.Rerror
	}
	if !IsNil(o.Ro) {
		toSerialize["ro"] = o.Ro
	}
	if !IsNil(o.Scsiblock) {
		toSerialize["scsiblock"] = o.Scsiblock
	}
	if !IsNil(o.Secs) {
		toSerialize["secs"] = o.Secs
	}
	if !IsNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Snapshot) {
		toSerialize["snapshot"] = o.Snapshot
	}
	if !IsNil(o.Ssd) {
		toSerialize["ssd"] = o.Ssd
	}
	if !IsNil(o.Trans) {
		toSerialize["trans"] = o.Trans
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	if !IsNil(o.Werror) {
		toSerialize["werror"] = o.Werror
	}
	if !IsNil(o.Wwn) {
		toSerialize["wwn"] = o.Wwn
	}
	return toSerialize, nil
}

type NullableCreateVMRequestScsi0 struct {
	value *CreateVMRequestScsi0
	isSet bool
}

func (v NullableCreateVMRequestScsi0) Get() *CreateVMRequestScsi0 {
	return v.value
}

func (v *NullableCreateVMRequestScsi0) Set(val *CreateVMRequestScsi0) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVMRequestScsi0) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVMRequestScsi0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVMRequestScsi0(val *CreateVMRequestScsi0) *NullableCreateVMRequestScsi0 {
	return &NullableCreateVMRequestScsi0{value: val, isSet: true}
}

func (v NullableCreateVMRequestScsi0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVMRequestScsi0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


