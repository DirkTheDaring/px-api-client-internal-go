/*
ProxMox VE API

ProxMox VE API

API version: 8.0
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the GetVMConfig200ResponseDataSpiceEnhancements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVMConfig200ResponseDataSpiceEnhancements{}

// GetVMConfig200ResponseDataSpiceEnhancements struct for GetVMConfig200ResponseDataSpiceEnhancements
type GetVMConfig200ResponseDataSpiceEnhancements struct {
	// Enable folder sharing via SPICE. Needs Spice-WebDAV daemon installed in the VM.
	Foldersharing *int32 `json:"foldersharing,omitempty"`
	// Enable video streaming. Uses compression for detected video streams.
	Videostreaming *string `json:"videostreaming,omitempty"`
}

// NewGetVMConfig200ResponseDataSpiceEnhancements instantiates a new GetVMConfig200ResponseDataSpiceEnhancements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVMConfig200ResponseDataSpiceEnhancements() *GetVMConfig200ResponseDataSpiceEnhancements {
	this := GetVMConfig200ResponseDataSpiceEnhancements{}
	return &this
}

// NewGetVMConfig200ResponseDataSpiceEnhancementsWithDefaults instantiates a new GetVMConfig200ResponseDataSpiceEnhancements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVMConfig200ResponseDataSpiceEnhancementsWithDefaults() *GetVMConfig200ResponseDataSpiceEnhancements {
	this := GetVMConfig200ResponseDataSpiceEnhancements{}
	return &this
}

// GetFoldersharing returns the Foldersharing field value if set, zero value otherwise.
func (o *GetVMConfig200ResponseDataSpiceEnhancements) GetFoldersharing() int32 {
	if o == nil || IsNil(o.Foldersharing) {
		var ret int32
		return ret
	}
	return *o.Foldersharing
}

// GetFoldersharingOk returns a tuple with the Foldersharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMConfig200ResponseDataSpiceEnhancements) GetFoldersharingOk() (*int32, bool) {
	if o == nil || IsNil(o.Foldersharing) {
		return nil, false
	}
	return o.Foldersharing, true
}

// HasFoldersharing returns a boolean if a field has been set.
func (o *GetVMConfig200ResponseDataSpiceEnhancements) HasFoldersharing() bool {
	if o != nil && !IsNil(o.Foldersharing) {
		return true
	}

	return false
}

// SetFoldersharing gets a reference to the given int32 and assigns it to the Foldersharing field.
func (o *GetVMConfig200ResponseDataSpiceEnhancements) SetFoldersharing(v int32) {
	o.Foldersharing = &v
}

// GetVideostreaming returns the Videostreaming field value if set, zero value otherwise.
func (o *GetVMConfig200ResponseDataSpiceEnhancements) GetVideostreaming() string {
	if o == nil || IsNil(o.Videostreaming) {
		var ret string
		return ret
	}
	return *o.Videostreaming
}

// GetVideostreamingOk returns a tuple with the Videostreaming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMConfig200ResponseDataSpiceEnhancements) GetVideostreamingOk() (*string, bool) {
	if o == nil || IsNil(o.Videostreaming) {
		return nil, false
	}
	return o.Videostreaming, true
}

// HasVideostreaming returns a boolean if a field has been set.
func (o *GetVMConfig200ResponseDataSpiceEnhancements) HasVideostreaming() bool {
	if o != nil && !IsNil(o.Videostreaming) {
		return true
	}

	return false
}

// SetVideostreaming gets a reference to the given string and assigns it to the Videostreaming field.
func (o *GetVMConfig200ResponseDataSpiceEnhancements) SetVideostreaming(v string) {
	o.Videostreaming = &v
}

func (o GetVMConfig200ResponseDataSpiceEnhancements) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVMConfig200ResponseDataSpiceEnhancements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Foldersharing) {
		toSerialize["foldersharing"] = o.Foldersharing
	}
	if !IsNil(o.Videostreaming) {
		toSerialize["videostreaming"] = o.Videostreaming
	}
	return toSerialize, nil
}

type NullableGetVMConfig200ResponseDataSpiceEnhancements struct {
	value *GetVMConfig200ResponseDataSpiceEnhancements
	isSet bool
}

func (v NullableGetVMConfig200ResponseDataSpiceEnhancements) Get() *GetVMConfig200ResponseDataSpiceEnhancements {
	return v.value
}

func (v *NullableGetVMConfig200ResponseDataSpiceEnhancements) Set(val *GetVMConfig200ResponseDataSpiceEnhancements) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVMConfig200ResponseDataSpiceEnhancements) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVMConfig200ResponseDataSpiceEnhancements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVMConfig200ResponseDataSpiceEnhancements(val *GetVMConfig200ResponseDataSpiceEnhancements) *NullableGetVMConfig200ResponseDataSpiceEnhancements {
	return &NullableGetVMConfig200ResponseDataSpiceEnhancements{value: val, isSet: true}
}

func (v NullableGetVMConfig200ResponseDataSpiceEnhancements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVMConfig200ResponseDataSpiceEnhancements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


