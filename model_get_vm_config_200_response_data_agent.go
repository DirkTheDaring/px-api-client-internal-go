/*
ProxMox VE API

ProxMox VE API

API version: 8.0
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the GetVMConfig200ResponseDataAgent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVMConfig200ResponseDataAgent{}

// GetVMConfig200ResponseDataAgent struct for GetVMConfig200ResponseDataAgent
type GetVMConfig200ResponseDataAgent struct {
	// Enable/disable communication with a QEMU Guest Agent (QGA) running in the VM.
	Enabled *int32 `json:"enabled,omitempty"`
	// Freeze/thaw guest filesystems on backup for consistency.
	FreezeFsOnBackup *int32 `json:"freeze-fs-on-backup,omitempty"`
	// Run fstrim after moving a disk or migrating the VM.
	FstrimClonedDisks *int32 `json:"fstrim_cloned_disks,omitempty"`
	// Select the agent type
	Type *string `json:"type,omitempty"`
}

// NewGetVMConfig200ResponseDataAgent instantiates a new GetVMConfig200ResponseDataAgent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVMConfig200ResponseDataAgent() *GetVMConfig200ResponseDataAgent {
	this := GetVMConfig200ResponseDataAgent{}
	return &this
}

// NewGetVMConfig200ResponseDataAgentWithDefaults instantiates a new GetVMConfig200ResponseDataAgent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVMConfig200ResponseDataAgentWithDefaults() *GetVMConfig200ResponseDataAgent {
	this := GetVMConfig200ResponseDataAgent{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetVMConfig200ResponseDataAgent) GetEnabled() int32 {
	if o == nil || IsNil(o.Enabled) {
		var ret int32
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMConfig200ResponseDataAgent) GetEnabledOk() (*int32, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetVMConfig200ResponseDataAgent) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given int32 and assigns it to the Enabled field.
func (o *GetVMConfig200ResponseDataAgent) SetEnabled(v int32) {
	o.Enabled = &v
}

// GetFreezeFsOnBackup returns the FreezeFsOnBackup field value if set, zero value otherwise.
func (o *GetVMConfig200ResponseDataAgent) GetFreezeFsOnBackup() int32 {
	if o == nil || IsNil(o.FreezeFsOnBackup) {
		var ret int32
		return ret
	}
	return *o.FreezeFsOnBackup
}

// GetFreezeFsOnBackupOk returns a tuple with the FreezeFsOnBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMConfig200ResponseDataAgent) GetFreezeFsOnBackupOk() (*int32, bool) {
	if o == nil || IsNil(o.FreezeFsOnBackup) {
		return nil, false
	}
	return o.FreezeFsOnBackup, true
}

// HasFreezeFsOnBackup returns a boolean if a field has been set.
func (o *GetVMConfig200ResponseDataAgent) HasFreezeFsOnBackup() bool {
	if o != nil && !IsNil(o.FreezeFsOnBackup) {
		return true
	}

	return false
}

// SetFreezeFsOnBackup gets a reference to the given int32 and assigns it to the FreezeFsOnBackup field.
func (o *GetVMConfig200ResponseDataAgent) SetFreezeFsOnBackup(v int32) {
	o.FreezeFsOnBackup = &v
}

// GetFstrimClonedDisks returns the FstrimClonedDisks field value if set, zero value otherwise.
func (o *GetVMConfig200ResponseDataAgent) GetFstrimClonedDisks() int32 {
	if o == nil || IsNil(o.FstrimClonedDisks) {
		var ret int32
		return ret
	}
	return *o.FstrimClonedDisks
}

// GetFstrimClonedDisksOk returns a tuple with the FstrimClonedDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMConfig200ResponseDataAgent) GetFstrimClonedDisksOk() (*int32, bool) {
	if o == nil || IsNil(o.FstrimClonedDisks) {
		return nil, false
	}
	return o.FstrimClonedDisks, true
}

// HasFstrimClonedDisks returns a boolean if a field has been set.
func (o *GetVMConfig200ResponseDataAgent) HasFstrimClonedDisks() bool {
	if o != nil && !IsNil(o.FstrimClonedDisks) {
		return true
	}

	return false
}

// SetFstrimClonedDisks gets a reference to the given int32 and assigns it to the FstrimClonedDisks field.
func (o *GetVMConfig200ResponseDataAgent) SetFstrimClonedDisks(v int32) {
	o.FstrimClonedDisks = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetVMConfig200ResponseDataAgent) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMConfig200ResponseDataAgent) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetVMConfig200ResponseDataAgent) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetVMConfig200ResponseDataAgent) SetType(v string) {
	o.Type = &v
}

func (o GetVMConfig200ResponseDataAgent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVMConfig200ResponseDataAgent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.FreezeFsOnBackup) {
		toSerialize["freeze-fs-on-backup"] = o.FreezeFsOnBackup
	}
	if !IsNil(o.FstrimClonedDisks) {
		toSerialize["fstrim_cloned_disks"] = o.FstrimClonedDisks
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetVMConfig200ResponseDataAgent struct {
	value *GetVMConfig200ResponseDataAgent
	isSet bool
}

func (v NullableGetVMConfig200ResponseDataAgent) Get() *GetVMConfig200ResponseDataAgent {
	return v.value
}

func (v *NullableGetVMConfig200ResponseDataAgent) Set(val *GetVMConfig200ResponseDataAgent) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVMConfig200ResponseDataAgent) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVMConfig200ResponseDataAgent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVMConfig200ResponseDataAgent(val *GetVMConfig200ResponseDataAgent) *NullableGetVMConfig200ResponseDataAgent {
	return &NullableGetVMConfig200ResponseDataAgent{value: val, isSet: true}
}

func (v NullableGetVMConfig200ResponseDataAgent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVMConfig200ResponseDataAgent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


