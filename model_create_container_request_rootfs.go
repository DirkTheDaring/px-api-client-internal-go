/*
ProxMox VE API

ProxMox VE API

API version: 8.3
Contact: baldur@email.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pxapiobject

import (
	"encoding/json"
)

// checks if the CreateContainerRequestRootfs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateContainerRequestRootfs{}

// CreateContainerRequestRootfs struct for CreateContainerRequestRootfs
type CreateContainerRequestRootfs struct {
	Acl *bool `json:"acl,omitempty"`
	Mountoptions *string `json:"mountoptions,omitempty"`
	Quota *bool `json:"quota,omitempty"`
	Replicate *bool `json:"replicate,omitempty"`
	Ro *bool `json:"ro,omitempty"`
	Shared *bool `json:"shared,omitempty"`
	Size *string `json:"size,omitempty"`
	Volume string `json:"volume"`
}

// NewCreateContainerRequestRootfs instantiates a new CreateContainerRequestRootfs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateContainerRequestRootfs(volume string) *CreateContainerRequestRootfs {
	this := CreateContainerRequestRootfs{}
	this.Volume = volume
	return &this
}

// NewCreateContainerRequestRootfsWithDefaults instantiates a new CreateContainerRequestRootfs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateContainerRequestRootfsWithDefaults() *CreateContainerRequestRootfs {
	this := CreateContainerRequestRootfs{}
	return &this
}

// GetAcl returns the Acl field value if set, zero value otherwise.
func (o *CreateContainerRequestRootfs) GetAcl() bool {
	if o == nil || IsNil(o.Acl) {
		var ret bool
		return ret
	}
	return *o.Acl
}

// GetAclOk returns a tuple with the Acl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestRootfs) GetAclOk() (*bool, bool) {
	if o == nil || IsNil(o.Acl) {
		return nil, false
	}
	return o.Acl, true
}

// HasAcl returns a boolean if a field has been set.
func (o *CreateContainerRequestRootfs) HasAcl() bool {
	if o != nil && !IsNil(o.Acl) {
		return true
	}

	return false
}

// SetAcl gets a reference to the given bool and assigns it to the Acl field.
func (o *CreateContainerRequestRootfs) SetAcl(v bool) {
	o.Acl = &v
}

// GetMountoptions returns the Mountoptions field value if set, zero value otherwise.
func (o *CreateContainerRequestRootfs) GetMountoptions() string {
	if o == nil || IsNil(o.Mountoptions) {
		var ret string
		return ret
	}
	return *o.Mountoptions
}

// GetMountoptionsOk returns a tuple with the Mountoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestRootfs) GetMountoptionsOk() (*string, bool) {
	if o == nil || IsNil(o.Mountoptions) {
		return nil, false
	}
	return o.Mountoptions, true
}

// HasMountoptions returns a boolean if a field has been set.
func (o *CreateContainerRequestRootfs) HasMountoptions() bool {
	if o != nil && !IsNil(o.Mountoptions) {
		return true
	}

	return false
}

// SetMountoptions gets a reference to the given string and assigns it to the Mountoptions field.
func (o *CreateContainerRequestRootfs) SetMountoptions(v string) {
	o.Mountoptions = &v
}

// GetQuota returns the Quota field value if set, zero value otherwise.
func (o *CreateContainerRequestRootfs) GetQuota() bool {
	if o == nil || IsNil(o.Quota) {
		var ret bool
		return ret
	}
	return *o.Quota
}

// GetQuotaOk returns a tuple with the Quota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestRootfs) GetQuotaOk() (*bool, bool) {
	if o == nil || IsNil(o.Quota) {
		return nil, false
	}
	return o.Quota, true
}

// HasQuota returns a boolean if a field has been set.
func (o *CreateContainerRequestRootfs) HasQuota() bool {
	if o != nil && !IsNil(o.Quota) {
		return true
	}

	return false
}

// SetQuota gets a reference to the given bool and assigns it to the Quota field.
func (o *CreateContainerRequestRootfs) SetQuota(v bool) {
	o.Quota = &v
}

// GetReplicate returns the Replicate field value if set, zero value otherwise.
func (o *CreateContainerRequestRootfs) GetReplicate() bool {
	if o == nil || IsNil(o.Replicate) {
		var ret bool
		return ret
	}
	return *o.Replicate
}

// GetReplicateOk returns a tuple with the Replicate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestRootfs) GetReplicateOk() (*bool, bool) {
	if o == nil || IsNil(o.Replicate) {
		return nil, false
	}
	return o.Replicate, true
}

// HasReplicate returns a boolean if a field has been set.
func (o *CreateContainerRequestRootfs) HasReplicate() bool {
	if o != nil && !IsNil(o.Replicate) {
		return true
	}

	return false
}

// SetReplicate gets a reference to the given bool and assigns it to the Replicate field.
func (o *CreateContainerRequestRootfs) SetReplicate(v bool) {
	o.Replicate = &v
}

// GetRo returns the Ro field value if set, zero value otherwise.
func (o *CreateContainerRequestRootfs) GetRo() bool {
	if o == nil || IsNil(o.Ro) {
		var ret bool
		return ret
	}
	return *o.Ro
}

// GetRoOk returns a tuple with the Ro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestRootfs) GetRoOk() (*bool, bool) {
	if o == nil || IsNil(o.Ro) {
		return nil, false
	}
	return o.Ro, true
}

// HasRo returns a boolean if a field has been set.
func (o *CreateContainerRequestRootfs) HasRo() bool {
	if o != nil && !IsNil(o.Ro) {
		return true
	}

	return false
}

// SetRo gets a reference to the given bool and assigns it to the Ro field.
func (o *CreateContainerRequestRootfs) SetRo(v bool) {
	o.Ro = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *CreateContainerRequestRootfs) GetShared() bool {
	if o == nil || IsNil(o.Shared) {
		var ret bool
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestRootfs) GetSharedOk() (*bool, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *CreateContainerRequestRootfs) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given bool and assigns it to the Shared field.
func (o *CreateContainerRequestRootfs) SetShared(v bool) {
	o.Shared = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateContainerRequestRootfs) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestRootfs) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateContainerRequestRootfs) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *CreateContainerRequestRootfs) SetSize(v string) {
	o.Size = &v
}

// GetVolume returns the Volume field value
func (o *CreateContainerRequestRootfs) GetVolume() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value
// and a boolean to check if the value has been set.
func (o *CreateContainerRequestRootfs) GetVolumeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Volume, true
}

// SetVolume sets field value
func (o *CreateContainerRequestRootfs) SetVolume(v string) {
	o.Volume = v
}

func (o CreateContainerRequestRootfs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateContainerRequestRootfs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Acl) {
		toSerialize["acl"] = o.Acl
	}
	if !IsNil(o.Mountoptions) {
		toSerialize["mountoptions"] = o.Mountoptions
	}
	if !IsNil(o.Quota) {
		toSerialize["quota"] = o.Quota
	}
	if !IsNil(o.Replicate) {
		toSerialize["replicate"] = o.Replicate
	}
	if !IsNil(o.Ro) {
		toSerialize["ro"] = o.Ro
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	toSerialize["volume"] = o.Volume
	return toSerialize, nil
}

type NullableCreateContainerRequestRootfs struct {
	value *CreateContainerRequestRootfs
	isSet bool
}

func (v NullableCreateContainerRequestRootfs) Get() *CreateContainerRequestRootfs {
	return v.value
}

func (v *NullableCreateContainerRequestRootfs) Set(val *CreateContainerRequestRootfs) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateContainerRequestRootfs) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateContainerRequestRootfs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateContainerRequestRootfs(val *CreateContainerRequestRootfs) *NullableCreateContainerRequestRootfs {
	return &NullableCreateContainerRequestRootfs{value: val, isSet: true}
}

func (v NullableCreateContainerRequestRootfs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateContainerRequestRootfs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


